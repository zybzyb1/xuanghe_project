C51 COMPILER V9.59.0.0   STC8G_H_TIMER                                                     09/18/2022 12:17:16 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE STC8G_H_TIMER
OBJECT MODULE PLACED IN .\Objects\STC8G_H_Timer.obj
COMPILER INVOKED BY: C:\Keil_C51_v5\C51\BIN\C51.EXE Driver\src\STC8G_H_Timer.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\sr
                    -c;.\Driver\inc) DEBUG PRINT(.\Listings\STC8G_H_Timer.lst) TABS(2) OBJECT(.\Objects\STC8G_H_Timer.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* Èç¹ûÒªÔÚ³ÌÐòÖÐÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌÐòÖÐ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌÐò            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "STC8G_H_Timer.h"
  14          
  15          #if 1
  16          //========================================================================
  17          // º¯Êý: u8 Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  18          // ÃèÊö: ¶¨Ê±Æ÷³õÊ¼»¯³ÌÐò.
  19          // ²ÎÊý: TIMx: ½á¹¹²ÎÊý,Çë²Î¿¼timer.hÀïµÄ¶¨Òå.
  20          // ·µ»Ø: ³É¹¦·µ»Ø SUCCESS, ´íÎó·µ»Ø FAIL.
  21          // °æ±¾: V1.0, 2012-10-22
  22          //========================================================================
  23          u8  Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  24          {
  25   1        if(TIM == Timer0)
  26   1        {
  27   2          Timer0_Stop();    //Í£Ö¹¼ÆÊý
  28   2          if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return FAIL;  //´íÎó
  29   2          TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //¹¤×÷Ä£Ê½,0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯ÖØ×°, 3:
             - ²»¿ÉÆÁ±Î16Î»×Ô¶¯ÖØ×°
  30   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return FAIL;
  31   2          Timer0_CLK_Select(TIMx->TIM_ClkSource); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ, ¶¨Ê±12T/1T
  32   2          Timer0_CLK_Output(TIMx->TIM_ClkOut);    //Êä³öÊ±ÖÓÊ¹ÄÜ
  33   2          T0_Load(TIMx->TIM_Value);
  34   2          Timer0_Run(TIMx->TIM_Run);
  35   2          return  SUCCESS;    //³É¹¦
  36   2        }
  37   1      
  38   1        if(TIM == Timer1)
  39   1        {
  40   2          Timer1_Stop();    //Í£Ö¹¼ÆÊý
  41   2          if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return FAIL;  //´íÎó
  42   2          TMOD = (TMOD & ~0x30) | (TIMx->TIM_Mode << 4);  //¹¤×÷Ä£Ê½,0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯Ö
             -Ø×°, 3: Í£Ö¹¹¤×÷
  43   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return FAIL;
  44   2          Timer1_CLK_Select(TIMx->TIM_ClkSource); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ, ¶¨Ê±12T/1T
  45   2          Timer1_CLK_Output(TIMx->TIM_ClkOut);    //Êä³öÊ±ÖÓÊ¹ÄÜ
  46   2          T1_Load(TIMx->TIM_Value);
  47   2          Timer1_Run(TIMx->TIM_Run);
  48   2          return  SUCCESS;    //³É¹¦
  49   2        }
  50   1      
  51   1        if(TIM == Timer2)   //Timer2,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
  52   1        {
C51 COMPILER V9.59.0.0   STC8G_H_TIMER                                                     09/18/2022 12:17:16 PAGE 2   

  53   2          Timer2_Stop();  //Í£Ö¹¼ÆÊý
  54   2          Timer2_CLK_Select(TIMx->TIM_ClkSource); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ, ¶¨Ê±12T/1T
  55   2          Timer2_CLK_Output(TIMx->TIM_ClkOut);    //Êä³öÊ±ÖÓÊ¹ÄÜ
  56   2      
  57   2          T2_Load(TIMx->TIM_Value);
  58   2          Timer2_Run(TIMx->TIM_Run);
  59   2          return  SUCCESS;    //³É¹¦
  60   2        }
  61   1      
  62   1        if(TIM == Timer3)   //Timer3,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
  63   1        {
  64   2          Timer3_Stop();  //Í£Ö¹¼ÆÊý
  65   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return FAIL;
  66   2          Timer3_CLK_Select(TIMx->TIM_ClkSource); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ, ¶¨Ê±12T/1T
  67   2          Timer3_CLK_Output(TIMx->TIM_ClkOut);    //Êä³öÊ±ÖÓÊ¹ÄÜ
  68   2      
  69   2          T3_Load(TIMx->TIM_Value);
  70   2          Timer3_Run(TIMx->TIM_Run);
  71   2          return  SUCCESS;    //³É¹¦
  72   2        }
  73   1      
  74   1        if(TIM == Timer4)   //Timer3,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
  75   1        {
  76   2          Timer4_Stop();  //Í£Ö¹¼ÆÊý
  77   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return FAIL;
  78   2          Timer4_CLK_Select(TIMx->TIM_ClkSource); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ, ¶¨Ê±12T/1T
  79   2          Timer4_CLK_Output(TIMx->TIM_ClkOut);    //Êä³öÊ±ÖÓÊ¹ÄÜ
  80   2      
  81   2          T4_Load(TIMx->TIM_Value);
  82   2          Timer4_Run(TIMx->TIM_Run);
  83   2          return  SUCCESS;    //³É¹¦
  84   2        }
  85   1        return FAIL;  //´íÎó
  86   1      }
  87          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    611    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
