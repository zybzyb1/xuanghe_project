<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\ADC_TempSensor.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\ADC_TempSensor.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Sat Mar 11 12:40:09 2023
<BR><P>
<H3>Maximum Stack Usage =        440 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; $Super$$main &rArr; code_run &rArr; one_run &rArr; save_one_run &rArr; data_save_flash &rArr; APP_FlashErase &rArr; HAL_FLASH_Erase &rArr; FLASH_WaitForLastOperation
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[8]">EXTI0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">EXTI0_1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[b]">ADC_COMP_IRQHandler</a> from py32f0xx_it.o(i.ADC_COMP_IRQHandler) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[8]">EXTI0_1_IRQHandler</a> from startup_py32f002xx.o(.text) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[9]">EXTI2_3_IRQHandler</a> from main.o(i.EXTI2_3_IRQHandler) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[a]">EXTI4_15_IRQHandler</a> from main.o(i.EXTI4_15_IRQHandler) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[6]">FLASH_IRQHandler</a> from startup_py32f002xx.o(.text) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from py32f0xx_it.o(i.HardFault_Handler) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[10]">I2C1_IRQHandler</a> from startup_py32f002xx.o(.text) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[e]">LPTIM1_IRQHandler</a> from startup_py32f002xx.o(.text) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from py32f0xx_it.o(i.NMI_Handler) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from py32f0xx_it.o(i.PendSV_Handler) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[7]">RCC_IRQHandler</a> from startup_py32f002xx.o(.text) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_py32f002xx.o(.text) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from startup_py32f002xx.o(.text) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from py32f0xx_it.o(i.SVC_Handler) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from py32f0xx_it.o(i.SysTick_Handler) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[14]">SystemInit</a> from system_py32f0xx.o(i.SystemInit) referenced from startup_py32f002xx.o(.text)
 <LI><a href="#[f]">TIM16_IRQHandler</a> from py32f0xx_it.o(i.TIM16_IRQHandler) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[c]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from py32f0xx_it.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[d]">TIM1_CC_IRQHandler</a> from startup_py32f002xx.o(.text) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[12]">USART1_IRQHandler</a> from startup_py32f002xx.o(.text) referenced from startup_py32f002xx.o(RESET)
 <LI><a href="#[15]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_py32f002xx.o(.text)
 <LI><a href="#[16]">fputc</a> from py32f002xx_start_kit.o(i.fputc) referenced from printfb.o(i.__0printf$bare)
 <LI><a href="#[13]">main</a> from system_py32f0xx.o(i.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[15]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[18]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[80]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[81]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[82]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[83]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[84]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_py32f002xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_data
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[1b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[19]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[8a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[13]"></a>main</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, system_py32f0xx.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = main &rArr; $Super$$main &rArr; code_run &rArr; one_run &rArr; save_one_run &rArr; data_save_flash &rArr; APP_FlashErase &rArr; HAL_FLASH_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[b]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_it.o(i.ADC_COMP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>APP_SystemClockConfig</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, main.o(i.APP_SystemClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = APP_SystemClockConfig &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[2a]"></a>Configure_EXTI_Ir</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, main.o(i.Configure_EXTI_Ir))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Configure_EXTI_Ir &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[9]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.EXTI2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EXTI2_3_IRQHandler &rArr; Configure_EXTI_Ir &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_EXTI_Ir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.EXTI4_15_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashVerify
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashErase
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashBlank
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16_Configure
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[2f]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, py32f0xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Erase
</UL>

<P><STRONG><a name="[31]"></a>HAL_Delay</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, py32f0xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[22]"></a>HAL_FLASH_Erase</STRONG> (Thumb, 562 bytes, Stack size 24 bytes, py32f0xx_hal_flash.o(i.HAL_FLASH_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_FLASH_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SectorErase
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_MassErase
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashErase
</UL>

<P><STRONG><a name="[63]"></a>HAL_FLASH_Lock</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, py32f0xx_hal_flash.o(i.HAL_FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_save_flash
</UL>

<P><STRONG><a name="[24]"></a>HAL_FLASH_Program</STRONG> (Thumb, 418 bytes, Stack size 24 bytes, py32f0xx_hal_flash.o(i.HAL_FLASH_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_FLASH_Program &rArr; FLASH_Program_Page
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashProgram
</UL>

<P><STRONG><a name="[62]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, py32f0xx_hal_flash.o(i.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_save_flash
</UL>

<P><STRONG><a name="[36]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; ir_rising
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ir_rising
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ir_falling
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[2e]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, py32f0xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; ir_rising
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
</UL>

<P><STRONG><a name="[2b]"></a>HAL_GPIO_Init</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, py32f0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_EXTI_Ir
</UL>

<P><STRONG><a name="[7b]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, py32f0xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_touch
</UL>

<P><STRONG><a name="[5a]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32f0xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_driver
</UL>

<P><STRONG><a name="[52]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32f0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_driver
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_deal
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Data_deal
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdelay_acton_fun
</UL>

<P><STRONG><a name="[30]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, py32f0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[65]"></a>HAL_GetUIDw0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, py32f0xx_hal.o(i.HAL_GetUIDw0))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUid
</UL>

<P><STRONG><a name="[66]"></a>HAL_GetUIDw1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, py32f0xx_hal.o(i.HAL_GetUIDw1))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUid
</UL>

<P><STRONG><a name="[67]"></a>HAL_GetUIDw2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, py32f0xx_hal.o(i.HAL_GetUIDw2))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUid
</UL>

<P><STRONG><a name="[39]"></a>HAL_IWDG_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, py32f0xx_hal_iwdg.o(i.HAL_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_init
</UL>

<P><STRONG><a name="[75]"></a>HAL_IWDG_Refresh</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32f0xx_hal_iwdg.o(i.HAL_IWDG_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[54]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32f0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[3a]"></a>HAL_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, py32f0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3b]"></a>HAL_InitTick</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, py32f0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[3c]"></a>HAL_MspInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, py32f0xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2c]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, py32f0xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_EXTI_Ir
</UL>

<P><STRONG><a name="[2d]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, py32f0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_EXTI_Ir
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[29]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 394 bytes, Stack size 16 bytes, py32f0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[40]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, py32f0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[28]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 734 bytes, Stack size 16 bytes, py32f0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[3e]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, py32f0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[42]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_BreakCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[44]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_CommutCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[45]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16_Configure
</UL>

<P><STRONG><a name="[46]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, py32f0xx_hal_msp.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[56]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16_Configure
</UL>

<P><STRONG><a name="[49]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 456 bytes, Stack size 8 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; buzzer_io_driver &rArr; buzzer_driver
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>

<P><STRONG><a name="[4a]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[4b]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[4c]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, main.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_PeriodElapsedCallback &rArr; buzzer_io_driver &rArr; buzzer_driver
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_io_driver
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>HAL_UART_Transmit</STRONG> (Thumb, 254 bytes, Stack size 48 bytes, py32f0xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, py32f0xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, py32f0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SystemInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system_py32f0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>TIM16_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, py32f0xx_it.o(i.TIM16_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM16_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; buzzer_io_driver &rArr; buzzer_driver
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_it.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, py32f0xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[55]"></a>Tim16_Configure</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, main.o(i.Tim16_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Tim16_Configure &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[57]"></a>__0printf$bare</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, printfb.o(i.__0printf$bare), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8d]"></a>__1printf$bare</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, printfb.o(i.__0printf$bare), UNUSED)

<P><STRONG><a name="[43]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, printfb.o(i.__0printf$bare))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>

<P><STRONG><a name="[78]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdelay_acton_fun
</UL>

<P><STRONG><a name="[8e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[90]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[59]"></a>buzzer_driver</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, user_gpio.o(i.buzzer_driver))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = buzzer_driver
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_run
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_io_driver
</UL>

<P><STRONG><a name="[5b]"></a>buzzer_init</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, buzzer.o(i.buzzer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = buzzer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_time_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[4e]"></a>buzzer_io_driver</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, buzzer.o(i.buzzer_io_driver))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = buzzer_io_driver &rArr; buzzer_driver
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_driver
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[5d]"></a>buzzer_run</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, buzzer.o(i.buzzer_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = buzzer_run &rArr; buzzer_driver
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_driver
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[5c]"></a>buzzer_time_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, buzzer.o(i.buzzer_time_set))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_init
</UL>

<P><STRONG><a name="[5e]"></a>code_run</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, encryptiondecryption.o(i.code_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = code_run &rArr; one_run &rArr; save_one_run &rArr; data_save_flash &rArr; APP_FlashErase &rArr; HAL_FLASH_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_save_flash
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_run
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_one_run
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comb_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[61]"></a>data_save_flash</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, user_flash.o(i.data_save_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = data_save_flash &rArr; APP_FlashErase &rArr; HAL_FLASH_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashVerify
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashProgram
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashErase
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FlashBlank
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_one_run
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;code_run
</UL>

<P><STRONG><a name="[16]"></a>fputc</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, py32f002xx_start_kit.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfb.o(i.__0printf$bare)
</UL>
<P><STRONG><a name="[6a]"></a>gpio_config</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, user_gpio.o(i.gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gpio_config &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[6b]"></a>id_compare</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, encryptiondecryption.o(i.id_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = id_compare &rArr; readCodeId &rArr; get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readCodeId
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUid
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[70]"></a>infrared_check_deal</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, infrared.o(i.infrared_check_deal))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = infrared_check_deal &rArr; IR_Data_deal &rArr; rdelay_acton_fun &rArr; method_res_compare &rArr; id_method2 &rArr; readCodeId &rArr; get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Data_deal
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[73]"></a>infrared_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, infrared.o(i.infrared_init))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[38]"></a>ir_falling</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, infrared.o(i.ir_falling))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[37]"></a>ir_rising</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, infrared.o(i.ir_rising))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ir_rising
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[72]"></a>iwdg_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.iwdg_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = iwdg_init &rArr; HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1e]"></a>$Super$$main</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = $Super$$main &rArr; code_run &rArr; one_run &rArr; save_one_run &rArr; data_save_flash &rArr; APP_FlashErase &rArr; HAL_FLASH_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_check_deal
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_check_deal
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;id_compare
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;code_run
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_run
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdelay_acton_fun
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16_Configure
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_EXTI_Ir
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>method_res_compare</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, encryptiondecryption.o(i.method_res_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = method_res_compare &rArr; id_method2 &rArr; readCodeId &rArr; get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;id_method2
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;id_method1
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdelay_acton_fun
</UL>

<P><STRONG><a name="[53]"></a>rdelay_acton_fun</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, main.o(i.rdelay_acton_fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = rdelay_acton_fun &rArr; method_res_compare &rArr; id_method2 &rArr; readCodeId &rArr; get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;method_res_compare
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_deal
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Data_deal
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[7a]"></a>read_touch</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_gpio.o(i.read_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = read_touch
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_check
</UL>

<P><STRONG><a name="[76]"></a>touch_check_deal</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touch.o(i.touch_check_deal))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = touch_check_deal &rArr; touch_deal &rArr; rdelay_acton_fun &rArr; method_res_compare &rArr; id_method2 &rArr; readCodeId &rArr; get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_deal
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[74]"></a>touch_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touch.o(i.touch_init))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[17]"></a>one_run</STRONG> (Thumb, 222 bytes, Stack size 168 bytes, encryptiondecryption.o(.ARM.__at_0x08004300))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = one_run &rArr; save_one_run &rArr; data_save_flash &rArr; APP_FlashErase &rArr; HAL_FLASH_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_save_flash
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_one_run
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_data
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUid
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption1
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comb_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;code_run
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[51]"></a>IR_Data_deal</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, infrared.o(i.IR_Data_deal))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = IR_Data_deal &rArr; rdelay_acton_fun &rArr; method_res_compare &rArr; id_method2 &rArr; readCodeId &rArr; get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdelay_acton_fun
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_check_deal
</UL>

<P><STRONG><a name="[71]"></a>IR_decode</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, infrared.o(i.IR_decode))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ir_rising
</UL>

<P><STRONG><a name="[7d]"></a>touch_check</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, touch.o(i.touch_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touch_check &rArr; read_touch
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_touch
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_check_deal
</UL>

<P><STRONG><a name="[7e]"></a>touch_deal</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, touch.o(i.touch_deal))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = touch_deal &rArr; rdelay_acton_fun &rArr; method_res_compare &rArr; id_method2 &rArr; readCodeId &rArr; get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rdelay_acton_fun
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_check_deal
</UL>

<P><STRONG><a name="[60]"></a>comb_addr</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, encryptiondecryption.o(i.comb_addr))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_one_run
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_one_run
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_data
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;code_run
</UL>

<P><STRONG><a name="[6f]"></a>encryption</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, encryptiondecryption.o(i.encryption))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = encryption
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_run
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;id_method2
</UL>

<P><STRONG><a name="[79]"></a>encryption1</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, encryptiondecryption.o(i.encryption1))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_run
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readCodeId
</UL>

<P><STRONG><a name="[64]"></a>getUid</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, encryptiondecryption.o(i.getUid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getUid
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetUIDw2
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetUIDw1
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetUIDw0
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_run
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;id_compare
</UL>

<P><STRONG><a name="[68]"></a>get_flash_data</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, encryptiondecryption.o(i.get_flash_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comb_addr
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_run
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_one_run
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readCodeId
</UL>

<P><STRONG><a name="[6d]"></a>id_method1</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, encryptiondecryption.o(i.id_method1))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = id_method1 &rArr; readCodeId &rArr; get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readCodeId
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;method_res_compare
</UL>

<P><STRONG><a name="[6e]"></a>id_method2</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, encryptiondecryption.o(i.id_method2))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = id_method2 &rArr; readCodeId &rArr; get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readCodeId
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;method_res_compare
</UL>

<P><STRONG><a name="[6c]"></a>readCodeId</STRONG> (Thumb, 110 bytes, Stack size 176 bytes, encryptiondecryption.o(i.readCodeId))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = readCodeId &rArr; get_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_data
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption1
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;id_method2
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;id_method1
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;id_compare
</UL>

<P><STRONG><a name="[5f]"></a>read_one_run</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, encryptiondecryption.o(i.read_one_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = read_one_run
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comb_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;code_run
</UL>

<P><STRONG><a name="[7c]"></a>save_one_run</STRONG> (Thumb, 52 bytes, Stack size 144 bytes, encryptiondecryption.o(i.save_one_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = save_one_run &rArr; data_save_flash &rArr; APP_FlashErase &rArr; HAL_FLASH_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_save_flash
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_data
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comb_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_run
</UL>

<P><STRONG><a name="[1f]"></a>APP_FlashBlank</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, user_flash.o(i.APP_FlashBlank))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_FlashBlank
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_save_flash
</UL>

<P><STRONG><a name="[21]"></a>APP_FlashErase</STRONG> (Thumb, 42 bytes, Stack size 40 bytes, user_flash.o(i.APP_FlashErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = APP_FlashErase &rArr; HAL_FLASH_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_save_flash
</UL>

<P><STRONG><a name="[23]"></a>APP_FlashProgram</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, user_flash.o(i.APP_FlashProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = APP_FlashProgram &rArr; HAL_FLASH_Program &rArr; FLASH_Program_Page
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_save_flash
</UL>

<P><STRONG><a name="[25]"></a>APP_FlashVerify</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, user_flash.o(i.APP_FlashVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = APP_FlashVerify
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_save_flash
</UL>

<P><STRONG><a name="[50]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, py32f0xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[3f]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, py32f0xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[32]"></a>FLASH_MassErase</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, py32f0xx_hal_flash.o(i.FLASH_MassErase))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Erase
</UL>

<P><STRONG><a name="[33]"></a>FLASH_PageErase</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, py32f0xx_hal_flash.o(i.FLASH_PageErase))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Erase
</UL>

<P><STRONG><a name="[35]"></a>FLASH_Program_Page</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, py32f0xx_hal_flash.o(i.FLASH_Program_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_Program_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[34]"></a>FLASH_SectorErase</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, py32f0xx_hal_flash.o(i.FLASH_SectorErase))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Erase
</UL>

<P><STRONG><a name="[58]"></a>_printf_core</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfb.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$bare
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
