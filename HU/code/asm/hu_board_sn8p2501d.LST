     1  000000             
     2  000000             ;********************************************************
     3  000000             ;晶振  RC: 内部16MHz          当前版本: V0javascript:;
     4  000000             ;目标 MCU: SN8P2501BP,SOP14   
     5  000000             ;开发作者:zyb                 烧录校验:  
     6  000000             ;开始日期: 2022.9.26          完成日期: 2022.9.X
     7  000000             ;本源代码适用于加热板由两路继电器控制，电路板半圆弧形。
     8  000000             ;输入部分由触摸按键和红外摇控两部分分别进行控制，其中还有一个由三片小电路板构成的照明灯
     9  000000             ;********************************************************
    10  000000             ;               _____________  ____________
    11  000000             ;              |             \/            |
    12  000000             ;            1-|P2.2                   P2.3|-R_POWER_LED红色电源指示灯
    13  000000             ;        LIGHT-|P2.1                   P2.4|-B_TOUCH_LED_PIN蓝色触摸指示灯
    14  000000             ;             -|P2.0                   P2.5|-
    15  000000             ;          +5V-|VDD                     VSS|-GND
    16  000000             ;       RELAY1-|P1.3/XIN          INT0/P0.0|-IR_PIN红外输入脚
    17  000000             ;       RELAY2-|1.2/XOUT               P1.0|-TOUCH_PIN触摸输入脚
    18  000000             ;             -|P1.1/RET/VPP   PWM/BZ0/P5.4|-pwm/buzzer
    19  000000             ;              |___________________________|
    20  000000             ;                   SN8P2511P,DIP8
    21  000000             ;********************************************************
    22  000000             ;#include <SN8P2501D.h>          // 头文件
    23  000000             ;#include "global.h"             //
    24  000000             
    25  000000             ;#define   IR_ONOFF_BUTTON     0x1B    //红外摇控板开关键值
    26  000000             ;#define   IR_LIGHT_BUTTON     0xBB    //红外摇控板加热丝档位调整键值
    27  000000             
    28  000000             ;#define   DELAY1_OFF     FP13=0    
    29  000000             ;#define   DELAY2_OFF     FP12=0 
    30  000000             ;#define   DELAY1_ON      FP13=1
    31  000000             ;#define   DELAY2_ON      FP12=1 
    32  000000             ;#define   TOUCH_PIN      FP23
    33  000000             ;#define   BUZZER_OFF     FP54=1
    34  000000             ;#define   BUZZER_ON      FP54=0
    35  000000             
    36  000000             ;#define   BUTTON_VALUE_MAX   4    //最大档位, 其实只有3档
    37  000000             ;#define   IR_DATA_BUFFER_SIZE  5
    38  000000             
    39  000000             ;#define  R_POWER_LED_ON      FP24=0
    40  000000             ;#define  B_BTOUCH_LED_ON     FP10=0
    41  000000             ;#define  B_BTOUCH_LED_OFF    FP10=1
    42  000000             ;********************************************************
    43  000000             
    44  000000             
    45  000000             CHIP	SN8P2501D					; Select the CHIP
    46  000000             //{{SONIX_CODE_OPTION
    47  000000             	.Code_Option	LVD		LVD_L		; 2.0V Reset
    48  000000             	.Code_Option	Reset_Pin	P11
    49  000000             	.Code_Option	Watch_Dog	Disable		; Disable Watchdog
    50  000000             	.Code_Option	High_Clk	IHRC_16M	; Internal 16M RC Oscillator
    51  000000             	.Code_Option	Fcpu		#7     ; Fcpu = Fosc/16
    52  000000             	.Code_Option	Security	Enable
    53  000000             	.Code_Option	Noise_Filter	Enable
    54  000000             //}}SONIX_CODE_OPTION
    55  000000             							; Enable the listing function
    56  000000             .DATA
    57  000000             	ORG    00H
    58  000000                    ;宏定义
    59  E 0000001B                IR_ONOFF_BUTTON   equ  0x1B    ;红外摇控板开关键值
    60  E 000000BB                IR_LIGHT_BUTTON   equ  0xBB    ;红外摇控板加热丝档位调整键值
    61  000000                    
    62  E 000300D1                DELAY1_PIN    equ   P1.3    
    63  E 000200D1                DELAY2_PIN    equ   P1.2 
    64  E 000000D1                TOUCH_PIN     equ   P1.0 ;P2.3
    65  E 000400D5                BUZZER_PIN    equ   P5.4
    66  E 000100D2                LIGHT_PIN     equ   P2.1
    67  E 000400D2                R_POWER_LED_PIN     equ   P2.4  ; P1.0
    68  E 000300D2                B_BTOUCH_LED_PIN    equ   P2.3
    69  000000             
    70  E 00000007                BUTTON_VALUE_MAX    equ   7    //最大档位, 其实只有6档
    71  E 00000005                IR_DATA_BUFFER_SIZE equ   5
    72  000000             
    73  000000                   
    74  000000                   
    75  000000             
    76  000000                    ;数据定义
    77  0000 D                    sysFlag          ds   1 
    78  0001 D                    sysFlag1         ds   1
    79  0002 D                    IR_time          ds   1		;下降沿之间的时间计数值
    80  0003 D                    IR_data          ds   1		;引导码+8个位数据各自占用的时间
    81  0004 D                    Touch_timeL      ds   1          ;触摸计时器L
    82  0005 D                    Touch_timeH      ds   1          ;触摸计时器H
    83  0006 D                    IR_bit           ds   1		;变量IR_bit用于指示红外数据的位数
    84  0007 D                    btn_value        ds   1          ;红外按键键值寄存器
    85  000008             
    86  0008 D                    IR_count         ds   1          ;红外管接收到数据后延时计数器--250ms
    87  0009 D                    IRdata           ds   1
    88  000A D                    buzzerCntL       ds   1          ;蜂鸣器计数器低字节
    89  000B D                    buzzerCntH       ds   1          ;蜂鸣器计数器高字节
    90  000C D                    tempVal          ds   1          ;临时变量
    91  00000D              
    92  E 00000000                IR_Flag          equ  sysFlag.0 	;红外数据接收完成标志位
    93  E 00010000                Touch_flag       equ  sysFlag.1  ;触摸IC输出标志
    94  E 00020000                touch_preFlag    equ  sysFlag.2  ;上次触摸IC输出标志
    95  E 00030000                timeFunFlag      equ  sysFlag.3;       ;定时功能标志
    96  E 00040000                sysFunFlag       equ  sysFlag.4;       ;系统功能标志
    97  E 00050000                isRec            equ  sysFlag.5;
    98  E 00060000                buzzerFlag       equ  sysFlag.6;
    99  E 00070000                buzzerEnableFlag equ  sysFlag.7;
   100  00000D             
   101  E 00000001                edgeFlag         equ  sysFlag1.0     ;红外管接收脚边沿标识
   102  E 00010001                light_flag       equ  sysFlag1.1     ;照明LED灯状态指示灯
   103  00000D             
   104  000000             .CODE
   105  000000             	ORG	0				;Code section start
   106  000000   8010(2)  	jmp		Reset				;Reset vector
   107  000001             							;Address 4 to 7 are reserved
   108  000008             	ORG	8
   109  000008   80F8(2)          JMP     IntService
   110  000009             
   111  000010                     ORG     10H	
   112  000010             Reset:
   113  000010   2BCA(1)          CLR    OSCM         ;// 普通模式(双时钟)         
   114  000011   2BC9(1)          CLR    INTEN        ;                
   115  000012   2BC8(1)          CLR    INTRQ        ;               
   116  000013                  
   117  000013                     //--- I0 Config --------------------------------------
   118  000013   2DFE(1)          MOV  A, #0FEH
   119  000014   2FB8(1)          B0MOV P0M,  A;                // P00输入  0=输入   1=输出   
   120  000015   2DFF(1)          MOV  A, #0FFH
   121  000016   2FC2(1)          B0MOV P2M,  A;                // P2.3输出驱动LED 蓝色触摸灯 P2.4输出驱动LED红色电源指示灯 P2.1输出驱动三个LED照明灯板 高电平有效  
   122  000017             
   123  000017   2DFE(1)          MOV  A, #0feH
   124  000018   2FC1(1)          B0MOV P1M,  A;                // P1.0触摸输入    P1.3P1.2输出驱动两组继电器
   125  000019   2DFF(1)          MOV  A, #0ffH
   126  00001A   2FC5(1)          B0MOV P5M,  A;                // P5.4输出 蜂鸣器输出保持高电平
   127  00001B                     
   128  00001B   1E01(1)          MOV   A, 0x01;
   129  00001C   2FE0(1)          B0MOV P0UR, A;                // 0=不上拉 1=上拉 P0.0拉
   130  00001D   1E00(1)          MOV   A, 0x00
   131  00001E   2FE2(1)          B0MOV P2UR, A;                //
   132  00001F   2FE1(1)          B0MOV P1UR, A;                // 
   133  000020   2FE5(1)          B0MOV P5UR, A;                //
   134  000021             
   135  000021   63D1(1)          B0BCLR DELAY1_PIN;         
   136  000022   62D1(1)          B0BCLR DELAY2_PIN; 
   137  000023   64D2(1)  	B0BCLR R_POWER_LED_PIN;
   138  000024   6BD2(1)          B0BSET B_BTOUCH_LED_PIN;
   139  000025   64D5(1)          B0BCLR BUZZER_PIN;
   140  000026                
   141  000026   2B00(1)          CLR    sysFlag
   142  000027   2B01(1)          CLR    sysFlag1
   143  000028   2B07(1)          CLR    btn_value
   144  000029   2B03(1)          CLR    IR_data
   145  00002A   2B02(1)          CLR    IR_time
   146  00002B   2B06(1)          CLR    IR_bit
   147  00002C   2B09(1)          CLR    IRdata
   148  00002D   2B08(1)          CLR    IR_count
   149  00002E   2B0A(1)          CLR    buzzerCntL
   150  00002F   2B0B(1)          CLR    buzzerCntH
   151  000030   2B04(1)          CLR    Touch_timeL
   152  000031   2B05(1)          CLR    Touch_timeH
   153  000032   6400(1)          B0BCLR   sysFunFlag   ;上电置1
   154  000033   6101(1)          B0BCLR   light_flag
   155  000034   6F00(1)          B0BSET   buzzerEnableFlag;蜂鸣器响 
   156  000035             
   157  000035                     //--- P00 Config-------------------------------------
   158  000035   2D10(1)          MOV   A, #10H
   159  000036   2FBF(1)          B0MOV PEDGE,  A;               //下降沿触发中断
   160  000037                     ;PEDGE = 0x08;               //上升沿触发中断
   161  000037   60C8(1)          B0BCLR	FP00IRQ;               //清除中断标志
   162  000038   68C9(1)          B0BSET   FP00IEN;               //P0.0 外部中断(INT0)使能
   163  000039   6801(1)          B0BSET   edgeFlag;
   164  00003A             
   165  00003A                     //--- T0  Config--定时器T0配置------------------------------------
   166  00003A             		//FT0TB = 0;                  //禁止 RTC
   167  00003A   2D70(1)          MOV  A,  #70H
   168  00003B   2FD8(1)          B0MOV T0M, A;                   // 16M/16/2= 2uS   Fcpu的2分频 
   169  00003C                     //T0M=0x10;                   // 1M/16/128=500uS   Fcpu的128分频
   170  00003C   2DBA(1)          MOV  A,  #0baH   ;
   171  00003D   2FD9(1)          B0MOV T0C,   A ;                    //256-139/2 = 256- 69.5 = 186.5 每139us中断一次 实际上是150us     
   172  00003E   64C8(1)  	B0BCLR	FT0IRQ ;                   // T0 中断请求标志清零。
   173  00003F   6CC9(1)  	B0BSET 	FT0IEN ;                   //允许响应 T0 中断。
   174  000040   6FD8(1)          B0BSET   FT0ENB;                   //启动定时器T0运行 
   175  000041             
   176  000041                     //--- TC0 PWM Config  蜂鸣器驱动 2K频率-高电平和低电平的时间宽度都为 250μs--------------------------------------
   177  000041   2D70(1)          MOV  A, #70H
   178  000042   2FDA(1)          B0MOV TC0M, A;                  // 16MHz/16=  Fcpu/2   2us  256-250/2=
   179  000043   2D9B(1)          MOV  A, #155
   180  000044   2FCD(1)          B0MOV  TC0R, A;                   //每隔125*2 =250us中断一次
   181  000045   2FDB(1)          B0MOV  TC0C, A;                   //  
   182  000046   6ADA(1)          B0BSET  FALOAD0;                  //使能 TC0 自动装载
   183  000047   61DA(1)          B0BCLR	FTC0OUT;                  //允许P5.4口作PWM输出
   184  000048   60DA(1)  	B0BCLR	FPWM0OUT;                //允许PWM/BUZZER功能  
   185  000049   6DC9(1)          B0BSET   FTC0IEN;                  //允许中断Enable TC0 Interrput
   186  00004A   6FDA(1)          B0BSET   FTC0ENB;                  // 定时器开启
   187  00004B                     //----Start Run---------------------------------------
   188  00004B   6FDF(1)          B0BSET   FGIE;                    // Enable all Interrput
   189  00004C              
   190  00004C                     
   191  00004C             
   192  00004C             Loop:
   193  00004C                    
   194  00004C   C050(2)          CALL IR_deal     ;红外处理
   195  00004D   C082(2)          CALL touch_check ;触摸检测
   196  00004E   C0B0(2)          CALL touch_deal  ;触摸处理
   197  00004F                  
   198  00004F   804C(2)          JMP Loop;
   199  000050             
   200  000050             
   201  000050             ;**************** 红外处理************************
   202  000050             IR_deal: 
   203  000050   7800(1+S)          B0BTS1     IR_Flag
   204  000051   8081(2)          JMP        IR_deal_end
   205  000052   2DE6(1)          MOV        A,#230
   206  000053   0708(1+S)          CMPRS      A,IR_count
   207  000054   807F(2)          JMP        IR_noden      ;IR_count != 230 还存在 IR_count > 230的情况
   208  000055             IR_den:
   209  000055   6000(1)          B0BCLR     IR_Flag       ;IR_count = 230 //红外数据接收完成后 230*139 = 31970us处理数据
   210  000056   2B08(1)          CLR        IR_count
   211  000057                     
   212  000057                     ;B0BTS0     sysFunFlag ;红外按键是在系统功能未开启的情况下才能使用，如果sysFunFlag=1则系统功能己开启
   213  000057                     ;JMP        IR_deal_end
   214  000057                     
   215  000057             
   216  000057   2E09(1)          B0MOV      A, IRdata
   217  000058   2A0F(1)  	AND        A, #0FH
   218  000059   2F0C(1)  	B0MOV      tempVal,A  ;低四位代表IR_LIGHT_BUTTON关键值 
   219  00005A                     
   220  00005A   6286(1)          B0BCLR     FC          ;高四位代表IR_ONOFF_BUTTON开键值
   221  00005B   0909(1)          RRCM       IRdata
   222  00005C   6286(1)          B0BCLR     FC 
   223  00005D   0909(1)          RRCM       IRdata
   224  00005E   6286(1)          B0BCLR     FC 
   225  00005F   0909(1)          RRCM       IRdata
   226  000060   6286(1)          B0BCLR     FC 
   227  000061   0909(1)          RRCM       IRdata 
   228  000062   2E09(1)          B0MOV      A, IRdata
   229  000063   070C(1+S)          CMPRS      A, tempVal
   230  000064   8067(2)  	JMP        value_noDen    ;如果两键值不相等则继续判断
   231  000065   2B09(1)          CLR        IRdata
   232  000066   8081(2)          JMP        IR_deal_end ;如果两键值相等则退出
   233  000067             value_noDen:      ;如果两键值不相等则继续判断
   234  000067   2B09(1)          CLR        IRdata
   235  000068   7286(1+S)          B0BTS0    FC
   236  000069   8070(2)          JMP        onoffDeal ;没借位，说明IR_ONOFF_BUTTON开键值 > IR_LIGHT_BUTTON关键值 
   237  00006A                                          ;借位，说明IR_ONOFF_BUTTON开键值 < IR_LIGHT_BUTTON关键值
   238  00006A                     ;灯键处理 
   239  00006A   6F00(1)          B0BSET     buzzerEnableFlag;蜂鸣器响
   240  00006B   63D2(1)          B0BCLR     B_BTOUCH_LED_PIN;
   241  00006C   6CD2(1)          B0BSET     R_POWER_LED_PIN;
   242  00006D   6C00(1)  	B0BSET     sysFunFlag
   243  00006E   C0BC(2)          CALL       btn_inc_fun     ;调用键值加1处理函数
   244  00006F   8081(2)          JMP        IR_deal_end ; 
   245  000070              
   246  000070             onoffDeal:   ;电源开关键开处理
   247  000070   6F00(1)          B0BSET     buzzerEnableFlag;蜂鸣器响 
   248  000071   7400(1+S)          B0BTS0     sysFunFlag ;红外按键是在系统功能未开启的情况下才能使用，如果sysFunFlag=1则系统功能己开启
   249  000072   8081(2)          JMP        IR_deal_end ;
   250  000073             
   251  000073   7101(1+S)          B0BTS0     light_flag
   252  000074   807A(2)          JMP        light_off_d ;跳至关处理
   253  000075   69D2(1)          B0BSET     LIGHT_PIN   ;开灯处理灯亮
   254  000076   6901(1)          B0BSET     light_flag
   255  000077             
   256  000077   63D2(1)          B0BCLR     B_BTOUCH_LED_PIN;
   257  000078   6CD2(1)          B0BSET     R_POWER_LED_PIN;
   258  000079             
   259  000079   8081(2)          JMP        IR_deal_end ;
   260  00007A             light_off_d:
   261  00007A   61D2(1)          B0BCLR     LIGHT_PIN   ;关灯处理
   262  00007B   6101(1)          B0BCLR     light_flag
   263  00007C                     
   264  00007C   64D2(1)          B0BCLR     R_POWER_LED_PIN;
   265  00007D   6BD2(1)          B0BSET     B_BTOUCH_LED_PIN;
   266  00007E             
   267  00007E   8081(2)          JMP        IR_deal_end ;
   268  00007F             	
   269  00007F             IR_noden:
   270  00007F   7A86(1+S)        B0BTS1     FC
   271  000080   8055(2)        JMP         IR_den ;发生了借位说明IR_count > 230
   272  000081                   ;JMP         IR_deal_end            
   273  000081             IR_deal_end:
   274  000081   0E00(2)        RET
   275  000082             ;******************end***********************************
   276  000082             ;/*************触摸功能*********************/
   277  000082             
   278  000082             ;-------------触摸输出检测-------------------
   279  000082             ;无触摸时高电平，有触摸时低电平时长大于300ms
   280  000082             touch_check:
   281  000082   70D1(1+S)      B0BTS0   TOUCH_PIN 
   282  000083   809B(2)      JMP      touch_Hight        ;当引脚高电平   
   283  000084   7100(1+S)      B0BTS0   Touch_flag       ;当引脚为低电平执行
   284  000085   8098(2)      JMP      touch_L;当Touch_flag=0时执行
   285  000086                                 ;当Touch_flag=1时执行 //139微秒 *500 = 69.5ms
   286  000086   2D01(1)      MOV      A,#1 ; 500 =1F4H    
   287  000087   0705(1+S)      CMPRS    A,Touch_timeH
   288  000088   8090(2)      JMP      Hsubnden
   289  000089   2DF4(1)      MOV      A,#0f4H  ;Touch_timeH =1 处理 比较低字节 
   290  00008A   0704(1+S)      CMPRS    A,Touch_timeL
   291  00008B   808D(2)      JMP      Lsubnden    ;跳至低字节不相等，高字节相等，处理
   292  00008C   8093(2)      JMP      daden500;低字节相等，高字节相等，处理
   293  00008D                 
   294  00008D             Lsubnden:
   295  00008D   7A86(1+S)       B0BTS1   FC 
   296  00008E   8093(2)       JMP      daden500;c=0发生借位，Touch_timeL>#F4H且 高字节相等，
   297  00008F   80AF(2)       JMP      touch_check_end ;c=0未发生借位，
   298  000090             
   299  000090             Hsubnden:   ;Touch_timeH !=1 处理 
   300  000090   7A86(1+S)      B0BTS1   FC
   301  000091   8093(2)      JMP      daden500   ;进位标志置 0 借位发生，表明Touch_timeH > 1 即大于500
   302  000092   80AF(2)      JMP      touch_check_end ;Touch_timeH < 1
   303  000093             
   304  000093             daden500:    ; Touch_timeH  Touch_timeL >=500 执行   
   305  000093   2B04(1)      CLR       Touch_timeL
   306  000094   2B05(1)      CLR       Touch_timeH
   307  000095   6900(1)      B0BSET   Touch_flag
   308  000096   6C00(1)      B0BSET   sysFunFlag
   309  000097   80AF(2)      JMP      touch_check_end 
   310  000098             touch_L:
   311  000098   2B04(1)      CLR      Touch_timeL
   312  000099   2B05(1)      CLR      Touch_timeH
   313  00009A   80AF(2)      JMP      touch_check_end
   314  00009B             
   315  00009B             
   316  00009B             touch_Hight:    ;当引脚为高电平执行  
   317  00009B   7900(1+S)      B0BTS1   Touch_flag        ;当引脚为低电平执行
   318  00009C   80AD(2)      JMP      touch_flag_L;当Touch_flag=0时执行
   319  00009D                 ;处理if(Touch_time > 2000) 
   320  00009D                 ;2000 hex 7D0
   321  00009D   2D07(1)      MOV      A,   #7   ; 先判断高位 Touch_timeH=7   
   322  00009E   0705(1+S)      CMPRS    A,   Touch_timeH
   323  00009F   80A7(2)      JMP      Hnoden 
   324  0000A0             Hden:;高字节相等继续判断低字节
   325  0000A0   2DD0(1)      MOV      A,   #0d0H 
   326  0000A1   0704(1+S)      CMPRS    A,   Touch_timeL
   327  0000A2   80AA(2)      JMP      Lnoden
   328  0000A3             Lden:;高低字节都相等  说明计数等于2000 处理等于大于2000
   329  0000A3   2B04(1)      CLR      Touch_timeL    
   330  0000A4   2B05(1)      CLR      Touch_timeH
   331  0000A5   6100(1)      B0BCLR   Touch_flag
   332  0000A6   80AF(2)      JMP      touch_check_end
   333  0000A7             
   334  0000A7             Hnoden:;高字节不相等
   335  0000A7   7286(1+S)      B0BTS0   FC    
   336  0000A8   80AF(2)      JMP      touch_check_end ;没发生借位
   337  0000A9   80A3(2)      JMP      Lden ; Touch_timeH>7 说明计数大于2000 处理大于2000
   338  0000AA             Lnoden:    ;处理高字节等于7低字节不等于D0H
   339  0000AA   7286(1+S)      B0BTS0   FC    
   340  0000AB   80AF(2)      JMP      touch_check_end ;没发生借位，说明Touch_timeL<7DH
   341  0000AC   80A3(2)      JMP      Lden ;发生借位 Touch_timeH=7,Touch_timeL>7DH 说明计数大于2000 处理大于2000
   342  0000AD             touch_flag_L:
   343  0000AD   2B04(1)      CLR       Touch_timeL
   344  0000AE   2B05(1)      CLR       Touch_timeH
   345  0000AF                ; JMP       touch_check_end
   346  0000AF             touch_check_end:
   347  0000AF   0E00(2)      RET
   348  0000B0             ;-------------------------------------------------------------
   349  0000B0             ;-----------------触摸处理------------------------------------
   350  0000B0             touch_deal:
   351  0000B0   7100(1+S)      B0BTS0     Touch_flag   ; 判断触摸标志==1
   352  0000B1   80B4(2)      JMP        deal_den1    ;Touch_flag==1处理
   353  0000B2   6200(1)      B0BCLR     touch_preFlag ;Touch_flag==0处理
   354  0000B3   80BB(2)      JMP        touch_deal_end
   355  0000B4             
   356  0000B4             deal_den1:
   357  0000B4   7200(1+S)      B0BTS0     touch_preFlag   ; 判断上次触摸标志touch_preFlag==0？
   358  0000B5   80BB(2)      JMP        touch_deal_end  ; touch_preFlag=1 处理
   359  0000B6   6A00(1)      B0BSET     touch_preFlag   ;touch_preFlag=0 处理 
   360  0000B7   6F00(1)      B0BSET     buzzerEnableFlag;蜂鸣器响
   361  0000B8   63D2(1)      B0BCLR     B_BTOUCH_LED_PIN;
   362  0000B9   6CD2(1)      B0BSET     R_POWER_LED_PIN;
   363  0000BA             
   364  0000BA             
   365  0000BA   C0BC(2)      CALL       btn_inc_fun     ;调用键值加1处理函数
   366  0000BB             touch_deal_end:
   367  0000BB                
   368  0000BB   0E00(2)      RET 
   369  0000BC             
   370  0000BC             btn_inc_fun:   ;键值加1处理函数 判断键值是否超过最大值BUTTON_VALUE_MAX
   371  0000BC   1607(1+S)      INCMS      btn_value
   372  0000BD   0000(1)      NOP
   373  0000BE   2D07(1)      MOV        A, #BUTTON_VALUE_MAX
   374  0000BF   0707(1+S)      CMPRS      A, btn_value
   375  0000C0   80C5(2)      JMP        deal_noden2   ;btn_value不等BUTTON_VALUE_MAX
   376  0000C1             deal_den2:                   ;btn_value相等BUTTON_VALUE_MAX
   377  0000C1   2D01(1)      MOV        A,  #1  
   378  0000C2   2F07(1)      B0MOV      btn_value,A
   379  0000C3   C0C9(2)      CALL       delay_action_fun
   380  0000C4   80C8(2)      JMP        btn_end
   381  0000C5             deal_noden2:    ;btn_value不等BUTTON_VALUE_MAX            
   382  0000C5   7A86(1+S)      B0BTS1     FC
   383  0000C6   80C1(2)      JMP        deal_den2 ;发生借位说明btn_value>BUTTON_VALUE_MAX
   384  0000C7   C0C9(2)      CALL       delay_action_fun
   385  0000C8                 ;JMP        btn_end     
   386  0000C8             btn_end:
   387  0000C8              
   388  0000C8   0E00(2)      RET 	
   389  0000C9             ;-------------------------------------------------------------
   390  0000C9             ;***************************END********************************
   391  0000C9             
   392  0000C9             ;8888888888*继电器动作函数*8888888888888888888
   393  0000C9             delay_action_fun: 
   394  0000C9   2D00(1)      MOV      A,#0
   395  0000CA   0707(1+S)      CMPRS    A, btn_value
   396  0000CB   80D1(2)      JMP      cmpare1
   397  0000CC   63D1(1)      B0BCLR   DELAY1_PIN  ;btn_value=0 处理
   398  0000CD   62D1(1)      B0BCLR   DELAY2_PIN  ; 断开所有继电器
   399  0000CE                           
   400  0000CE   64D2(1)      B0BCLR   R_POWER_LED_PIN;
   401  0000CF   6BD2(1)      B0BSET   B_BTOUCH_LED_PIN;
   402  0000D0             
   403  0000D0   80F7(2)      JMP      delay_fun_end
   404  0000D1             cmpare1:
   405  0000D1   2D01(1)      MOV      A, #1
   406  0000D2   0707(1+S)      CMPRS    A, btn_value 
   407  0000D3   80D7(2)      JMP      cmpare2
   408  0000D4   6BD1(1)      B0BSET   DELAY1_PIN;btn_value=1 处理
   409  0000D5   62D1(1)      B0BCLR   DELAY2_PIN  ;继电器2断开继电器1吸合
   410  0000D6   80F7(2)      JMP      delay_fun_end
   411  0000D7             cmpare2:
   412  0000D7   2D02(1)      MOV      A, #2
   413  0000D8   0707(1+S)      CMPRS    A, btn_value 
   414  0000D9   80DD(2)      JMP      cmpare3
   415  0000DA   63D1(1)      B0BCLR   DELAY1_PIN ;btn_value=2 处理
   416  0000DB   6AD1(1)      B0BSET   DELAY2_PIN ;继电器1断开继电器2吸合
   417  0000DC   80F7(2)      JMP      delay_fun_end
   418  0000DD             cmpare3:
   419  0000DD   2D03(1)      MOV      A, #3
   420  0000DE   0707(1+S)      CMPRS    A, btn_value 
   421  0000DF   80E3(2)      JMP      cmpare4
   422  0000E0   6BD1(1)      B0BSET   DELAY1_PIN ;btn_value=3 处理
   423  0000E1   6AD1(1)      B0BSET   DELAY2_PIN ;吸合所有继电器
   424  0000E2   80F7(2)      JMP      delay_fun_end
   425  0000E3             cmpare4:
   426  0000E3   2D04(1)      MOV      A, #4
   427  0000E4   0707(1+S)      CMPRS    A, btn_value 
   428  0000E5   80E8(2)      JMP      cmpare5
   429  0000E6   69D2(1)      B0BSET   LIGHT_PIN;btn_value=4 处理 灯点亮           
   430  0000E7   80F7(2)      JMP      delay_fun_end
   431  0000E8             cmpare5:
   432  0000E8   2D05(1)      MOV      A, #5
   433  0000E9   0707(1+S)      CMPRS    A, btn_value 
   434  0000EA   80EF(2)      JMP      cmpare6
   435  0000EB   69D2(1)      B0BSET   LIGHT_PIN ;btn_value=5 处理灯亮
   436  0000EC   63D1(1)      B0BCLR   DELAY1_PIN ;
   437  0000ED   62D1(1)      B0BCLR   DELAY2_PIN; 断开所有继电器
   438  0000EE   80F7(2)      JMP      delay_fun_end
   439  0000EF             cmpare6:
   440  0000EF   2D06(1)      MOV      A, #6
   441  0000F0   0707(1+S)      CMPRS    A, btn_value 
   442  0000F1   80F7(2)      JMP      delay_fun_end
   443  0000F2   61D2(1)      B0BCLR   LIGHT_PIN ;btn_value=6 处理 处理灯灭
   444  0000F3   6400(1)      B0BCLR   sysFunFlag  
   445  0000F4   6101(1)      B0BCLR   light_flag 
   446  0000F5             
   447  0000F5   64D2(1)      B0BCLR    R_POWER_LED_PIN; 
   448  0000F6   6BD2(1)      B0BSET    B_BTOUCH_LED_PIN;
   449  0000F7                
   450  0000F7                 ;DELAY1_PIN = DELAY_OFF ;
   451  0000F7                 ;DELAY2_PIN = DELAY_OFF ; 断开所有继电器
   452  0000F7                ; JMP      delay_fun_end
   453  0000F7              
   454  0000F7             delay_fun_end:
   455  0000F7   0E00(2)       RET
   456  0000F8             ;8888888888888888*end*888888888888888888888
   457  0000F8             
   458  0000F8             
   459  0000F8             IntService:
   460  0000F8   0400(1)        PUSH
   461  0000F9             ;********************** INT0 中断服务程序************************** 
   462  0000F9                    //P00 interrput//P0.0 外部中断(INT0)
   463  0000F9   78C8(1+S)        B0BTS1 FP00IRQ ; 检测 P00IRQ。 ; INT0 中断服务程序
   464  0000FA   8133(2)        JMP    T0_int ; P00IRQ = 0。
   465  0000FB   60C8(1)        B0BCLR FP00IRQ ; P00IRQ 清零。
   466  0000FC                
   467  0000FC   7801(1+S)        B0BTS1   edgeFlag  ;
   468  0000FD   810E(2)        JMP      Rising_edge;跳至上升沿中断处理 
   469  0000FE                
   470  0000FE               ;Falling edge    //下降沿中断  
   471  0000FE   2D08(1)        MOV      A, #8   ; //触发方式为上沿触发
   472  0000FF   2FBF(1)        B0MOV    PEDGE,A
   473  000100   6001(1)        B0BCLR   edgeFlag  
   474  000101   2D3C(1)        MOV      A, #60     ;//判断引导码(9ms+1.12ms)（0.56ms+1.12ms）
   475  000102   0702(1+S)        CMPRS    A,IR_time
   476  000103   810A(2)        JMP      timeBuDen  ;跳至IR_time!=60处理
   477  000104             rising_result:             ; IR_time=60处理
   478  000104   2B03(1)        CLR      IR_data
   479  000105   6D00(1)        B0BSET   isRec
   480  000106   2D01(1)        MOV      A,#1
   481  000107   2F06(1)        B0MOV    IR_bit,A  ; //位数变量自增
   482  000108   2B02(1)        CLR      IR_time   ;//清零时间宽度计数值
   483  000109   8130(2)        JMP      Exit_int0      
   484  00010A             timeBuDen:  
   485  00010A   7A86(1+S)        B0BTS1   FC
   486  00010B   8104(2)        JMP      rising_result
   487  00010C   2B02(1)        CLR      IR_time   ;//清零时间宽度计数值
   488  00010D   8130(2)        JMP      Exit_int0  ;没借位说明IR_time<60 
   489  00010E             Rising_edge:;上升沿中断
   490  00010E   2D10(1)        MOV      A,   #010H
   491  00010F   2FBF(1)        B0MOV    PEDGE,A
   492  000110   6801(1)        B0BSET   edgeFlag	 ;配置触发方式为下降沿触发;
   493  000111                   		         ;开始记录时间长 1-0码 	
   494  000111   7D00(1+S)        B0BTS1   isRec     
   495  000112   8130(2)        JMP      Exit_int0
   496  000113                  
   497  000113   2D05(1)        MOV      A, #5
   498  000114   0702(1+S)        CMPRS    A, IR_time
   499  000115   8119(2)        JMP      noDen5
   500  000116             timeDen5:                ;IR_time>=5,若“时间间隔”比5大那肯定是“1码”反之为“0码”
   501  000116   2D80(1)        MOV      A, #80H  
   502  000117   1903(1)        OR       IR_data, A ;//通过按位或运算高位填1    		
   503  000118   811B(2)        JMP      dataOK
   504  000119             noDen5:
   505  000119   7A86(1+S)        B0BTS1   FC			    		
   506  00011A   8116(2)        JMP      timeDen5  ;产生借位说明IR_time>5			                   
   507  00011B             dataOK:	 
   508  00011B   2B02(1)        CLR      IR_time	 ;清零时间宽度计数值        //若数据没有拼合完8次
   509  00011C   1606(1+S)        INCMS    IR_bit 	 ;位数变量自增	
   510  00011D   2D09(1)        MOV      A, #9	 ;如果达到了9位（引导码+8个数据位）
   511  00011E   0706(1+S)        CMPRS    A, IR_bit
   512  00011F   812E(2)        JMP      bitBuden9
   513  000120                                      ;IR_bit达到了9位（引导码+8个数据位）处理
   514  000120   6800(1)        B0BSET   IR_Flag   ;红外数据接收完成标志位置1
   515  000121   2B06(1)        CLR      IR_bit    ;位数变量清零
   516  000122   6500(1)        B0BCLR   isRec
   517  000123   2DBB(1)        MOV      A, #IR_LIGHT_BUTTON      
   518  000124   0703(1+S)        CMPRS    A, IR_data     
   519  000125   8128(2)        JMP      IRd_buDenLight
   520  000126   1609(1+S)        INCMS    IRdata
   521  000127   8130(2)        JMP      Exit_int0
   522  000128             IRd_buDenLight:
   523  000128   2D1B(1)        MOV      A, #IR_ONOFF_BUTTON
   524  000129   0703(1+S)        CMPRS    A, IR_data 
   525  00012A   8130(2)        JMP      Exit_int0
   526  00012B   2D10(1)        MOV      A, #0x10
   527  00012C   1309(1)        ADD      IRdata,A
   528  00012D   8130(2)        JMP      Exit_int0
   529  00012E             bitBuden9:			 
   530  00012E   6286(1)         B0BCLR  FC    ;通过右移运算“腾出”位置准备下一位判定
   531  00012F   0903(1)         RRCM    IR_data 
   532  000130                    ;JMP      Exit_int0 							
   533  000130             Exit_int0:
   534  000130   2B08(1)         CLR       IR_count ;//有接收数据则清零延时计数器  
   535  000131   68C9(1)         B0BSET    FP00IEN  ;//P0.0 外部中断(INT0)使能
   536  000132   816C(2)         JMP   Exit_int
   537  000133             
   538  000133             ;******************** T0 中断程序********************************
   539  000133             T0_int:  ; T0 中断程序。//定时器T0中断 139us中断一次
   540  000133   7CC8(1+S)  	B0BTS1   FT0IRQ    ; 检查是否有 T0 中断请求标志。
   541  000134   8145(2)  	JMP      TC0_int   ;
   542  000135   64C8(1)  	B0BCLR   FT0IRQ    ;清 T0IRQ。 ;// T0 中断请求标志清零。
   543  000136   2DBA(1)  	MOV      A, #186   ;256-139/2 = 256- 69.5 = 186.5 每139us中断一次
   544  000137   2FD9(1)  	B0MOV    T0C, A
   545  000138   2DF0(1)          MOV      A, #0F0H
   546  000139   0702(1+S)          CMPRS    A,IR_time 
   547  00013A   1602(1+S)          INCMS    IR_time
   548  00013B   1604(1+S)          INCMS    Touch_timeL
   549  00013C   813E(2)          JMP      timeLno0
   550  00013D   1605(1+S)          INCMS    Touch_timeH  
   551  00013E             timeLno0:      
   552  00013E   7000(1+S)          B0BTS0   IR_Flag        
   553  00013F   1608(1+S)          INCMS    IR_count   ;//接收到红外数据,计数器加1
   554  000140   2D70(1)          MOV      A, #70H
   555  000141   2FD8(1)          B0MOV    T0M, A     ;16M/16/2= 2uS   Fcpu的2分频
   556  000142                 
   557  000142   6CC9(1)          B0BSET   FT0IEN     ; //允许响应 T0 中断。
   558  000143   6FD8(1)          B0BSET   FT0ENB     ; //启动定时器T0运行 
   559  000144   816C(2)          JMP   Exit_int
   560  000145             
   561  000145             ;*************TC0中断子程序***********************************
   562  000145             TC0_int:  ; TC0 中断程序。 250uS
   563  000145   7DC8(1+S)          B0BTS1 FTC0IRQ   ; 检查是否有 TC0 中断请求标志。 
   564  000146   816C(2)  	JMP EXIT_INT     ; TC0IRQ = 0，退出中断。
   565  000147   65C8(1)  	B0BCLR FTC0IRQ   ; 清 TC0IRQ。
   566  000148   2D70(1)          MOV  A, #70H
   567  000149   2FDA(1)          B0MOV TC0M, A;                  // 16MHz/16=  Fcpu/2   2us  256-250/2= 
   568  00014A   2D9B(1)          MOV  A, #155
   569  00014B   2FCD(1)          B0MOV  TC0R, A;                   //每隔125*2 =250us中断一次
   570  00014C   2FDB(1)          B0MOV  TC0C, A;                  
   571  00014D   6ADA(1)          B0BSET  FALOAD0;                  //使能 TC0 自动装载
   572  00014E   61DA(1)          B0BCLR	FTC0OUT;                  //允许P5.4口作PWM输出
   573  00014F   60DA(1)  	B0BCLR	FPWM0OUT;                //允许PWM/BUZZER功能  
   574  000150                
   575  000150   7F00(1+S)          B0BTS1    buzzerEnableFlag
   576  000151   8168(2)          JMP       BUZZER_OFF_DEAL
   577  000152                         
   578  000152   160A(1+S)          INCMS     buzzerCntL
   579  000153   8155(2)          JMP       banDaYu3000
   580  000154   160B(1+S)          INCMS     buzzerCntH
   581  000155             banDaYu3000:   ;1000 = 0x3E8
   582  000155   2D03(1)          MOV       A, #03H
   583  000156   070B(1+S)          CMPRS     A, buzzerCntH
   584  000157   8160(2)          JMP       BUZZER_BUDEN   ;跳转到buzzerCnt < 1000
   585  000158   2DE8(1)          MOV       A, #0E8H       ;高字节相等再判断低字节
   586  000159   070A(1+S)          CMPRS     A, buzzerCntL      
   587  00015A   8160(2)          JMP       BUZZER_BUDEN   ;高字节相等低字节不相等
   588  00015B   6700(1)          B0BCLR    buzzerEnableFlag
   589  00015C   2B0A(1)          CLR       buzzerCntL
   590  00015D   2B0B(1)          CLR       buzzerCntH
   591  00015E   64D5(1)          B0BCLR    BUZZER_PIN
   592  00015F   816A(2)          JMP       TC0_int_end
   593  000160             
   594  000160             BUZZER_BUDEN:
   595  000160   7E00(1+S)          B0BTS1    buzzerFlag
   596  000161   8165(2)  	JMP       buzzerIs0
   597  000162   6600(1)          B0BCLR    buzzerFlag
   598  000163   64D5(1)          B0BCLR    BUZZER_PIN
   599  000164   816A(2)          JMP       TC0_int_end
   600  000165             buzzerIs0:
   601  000165   6E00(1)          B0BSET    buzzerFlag
   602  000166   6CD5(1)  	B0BSET	  BUZZER_PIN     
   603  000167   816A(2)          JMP       TC0_int_end
   604  000168             
   605  000168             BUZZER_OFF_DEAL:
   606  000168   64D5(1)          B0BCLR    BUZZER_PIN
   607  000169   816A(2)          JMP       TC0_int_end
   608  00016A             TC0_int_end:
   609  00016A   6DC9(1)          B0BSET   FTC0IEN;                  ;//允许中断Enable TC0 Interrput
   610  00016B   6FDA(1)          B0BSET   FTC0ENB;                 ; // 定时器开启
   611  00016C                     ;JMP   Exit_int	
   612  00016C             Exit_int: ;退出中断
   613  00016C             
   614  00016C   0500(1)        POP
   615  00016D   0F00(2)        RETI
   616  00016E                   ENDP
   617  00016E             
