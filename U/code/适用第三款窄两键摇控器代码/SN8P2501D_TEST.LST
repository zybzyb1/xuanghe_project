     1  000000             
     2  000000             ;********************************************************
     3  000000             ;晶振  RC: 内部16MHz          当前版本: V0
     4  000000             ;目标 MCU: SN8P2501BP,SOP14   
     5  000000             ;开发作者:zyb                 烧录校验:  
     6  000000             ;开始日期: 2022.9.26          完成日期: 2022.9.X
     7  000000             ;本源码适用于发热管加热电路控制板，硬件部分由两路继电器控制
     8  000000             ;输入控制由摇控器与触摸开关两路分别进行控制两路加热
     9  000000             ;********************************************************
    10  000000             ;               _____________  ____________
    11  000000             ;              |             \/            |
    12  000000             ;             -|P2.2                   P2.3|-TOUCH_PIN触摸输入脚
    13  000000             ;        LIGHT-|P2.1                   P2.4|-B_TOUCH_LED_PIN蓝色触摸指示灯
    14  000000             ;             -|P2.0                   P2.5|-
    15  000000             ;          +5V-|VDD                     VSS|-GND
    16  000000             ;       RELAY1-|P1.3/XIN          INT0/P0.0|-IR_PIN红外输入脚
    17  000000             ;       RELAY2-|1.2/XOUT               P1.0|-R_POWER_LED红色电源指示灯
    18  000000             ;             -|P1.1/RET/VPP   PWM/BZ0/P5.4|-pwm/buzzer
    19  000000             ;              |___________________________|
    20  000000             ;                   SN8P2511P,DIP8
    21  000000             ;********************************************************
    22  000000             ;#include <SN8P2501D.h>          // 头文件
    23  000000             ;#include "global.h"             //
    24  000000             
    25  000000             ;#define   IR_ONOFF_BUTTON     0x1B    //红外摇控板开关键值
    26  000000             ;#define   IR_LIGHT_BUTTON     0xBB    //红外摇控板加热丝档位调整键值
    27  000000             
    28  000000             ;#define   DELAY1_OFF     FP13=0    
    29  000000             ;#define   DELAY2_OFF     FP12=0 
    30  000000             ;#define   DELAY1_ON      FP13=1
    31  000000             ;#define   DELAY2_ON      FP12=1 
    32  000000             ;#define   TOUCH_PIN      FP23
    33  000000             ;#define   BUZZER_OFF     FP54=1
    34  000000             ;#define   BUZZER_ON      FP54=0
    35  000000             
    36  000000             ;#define   BUTTON_VALUE_MAX   4    //最大档位, 其实只有3档
    37  000000             ;#define   IR_DATA_BUFFER_SIZE  5
    38  000000             
    39  000000             ;#define  R_POWER_LED_ON      FP24=0
    40  000000             ;#define  B_BTOUCH_LED_ON     FP10=0
    41  000000             ;#define  B_BTOUCH_LED_OFF    FP10=1
    42  000000             ;********************************************************
    43  000000             
    44  000000             
    45  000000             CHIP	SN8P2501D					; Select the CHIP
    46  000000             //{{SONIX_CODE_OPTION
    47  000000             	.Code_Option	LVD		LVD_L		; 2.0V Reset
    48  000000             	.Code_Option	Reset_Pin	P11
    49  000000             	.Code_Option	Watch_Dog	Enable		; Normal mode: Enable Watchdog Green and Sleep mode: Stop Watchdog
    50  000000             	.Code_Option	High_Clk	IHRC_16M	; Internal 16M RC Oscillator
    51  000000             	.Code_Option	Fcpu		#7     ; Fcpu = Fosc/16
    52  000000             	.Code_Option	Security	Enable
    53  000000             	.Code_Option	Noise_Filter	Enable
    54  000000             //}}SONIX_CODE_OPTION
    55  000000             							; Enable the listing function
    56  000000             .DATA
    57  000000             	ORG    00H
    58  000000                    ;宏定义
    59  E 000000DD                IR_ONOFF_BUTTON   equ  0xdd    ;红外摇控板开关键值
    60  E 0000000D                IR_LIGHT_BUTTON   equ  0x0d    ;红外摇控板加热丝档位调整键值
    61  000000                    
    62  E 000300D1                DELAY1_PIN    equ   P1.3    
    63  E 000200D1                DELAY2_PIN    equ   P1.2 
    64  E 000300D2                TOUCH_PIN     equ   P2.3
    65  E 000400D5                BUZZER_PIN    equ   P5.4
    66  E 000100D2                LIGHT_PIN     equ   P2.1
    67  E 000400D2                R_POWER_LED_PIN     equ   P2.4 
    68  E 000000D1                B_BTOUCH_LED_PIN    equ   P1.0
    69  000000             
    70  E 00000007                BUTTON_VALUE_MAX    equ   7    //最大档位, 其实只有6档
    71  E 00000005                IR_DATA_BUFFER_SIZE equ   5
    72  000000             
    73  000000                   
    74  000000                   
    75  000000             
    76  000000                    ;数据定义
    77  0000 D                    sysFlag          ds   1 
    78  0001 D                    sysFlag1         ds   1
    79  0002 D                    IR_time          ds   1		;下降沿之间的时间计数值
    80  0003 D                    IR_data          ds   1		;引导码+8个位数据各自占用的时间
    81  0004 D                    Touch_timeL      ds   1          ;触摸计时器L
    82  0005 D                    Touch_timeH      ds   1          ;触摸计时器H
    83  0006 D                    IR_bit           ds   1		;变量IR_bit用于指示红外数据的位数
    84  0007 D                    btn_value        ds   1          ;红外按键键值寄存器
    85  000008             
    86  0008 D                    IR_count         ds   1          ;红外管接收到数据后延时计数器--250ms
    87  0009 D                    IRdata           ds   1
    88  000A D                    buzzerCntL       ds   1          ;蜂鸣器计数器低字节
    89  000B D                    buzzerCntH       ds   1          ;蜂鸣器计数器高字节
    90  000C D                    tempVal          ds   1          ;临时变量
    91  00000D              
    92  E 00000000                IR_Flag          equ  sysFlag.0 	;红外数据接收完成标志位
    93  E 00010000                Touch_flag       equ  sysFlag.1  ;触摸IC输出标志
    94  E 00020000                touch_preFlag    equ  sysFlag.2  ;上次触摸IC输出标志
    95  E 00030000                timeFunFlag      equ  sysFlag.3;       ;定时功能标志
    96  E 00040000                sysFunFlag       equ  sysFlag.4;       ;系统功能标志
    97  E 00050000                isRec            equ  sysFlag.5;
    98  E 00060000                buzzerFlag       equ  sysFlag.6;
    99  E 00070000                buzzerEnableFlag equ  sysFlag.7;
   100  00000D             
   101  E 00000001                edgeFlag         equ  sysFlag1.0     ;红外管接收脚边沿标识
   102  E 00010001                light_flag       equ  sysFlag1.1     ;照明LED灯状态指示灯
   103  E 00020001                int0_flag        equ  sysFlag1.2     ;int0中断标志
   104  00000D               
   105  000000             .CODE
   106  000000             	ORG	0				;Code section start
   107  000000   8010(2)  	jmp		Reset				;Reset vector
   108  000001             							;Address 4 to 7 are reserved
   109  000008             	ORG	8
   110  000008   8115(2)          JMP     IntService
   111  000009             
   112  000010                     ORG     10H	
   113  000010             Reset:
   114  000010   2BCA(1)          CLR    OSCM         ;// 普通模式(双时钟)         
   115  000011   2BC9(1)          CLR    INTEN        ;                
   116  000012   2BC8(1)          CLR    INTRQ        ;               
   117  000013                   
   118  000013                     //--- I0 Config --------------------------------------
   119  000013   2DFE(1)          MOV  A, #0FEH
   120  000014   2FB8(1)          B0MOV P0M,  A;                // P00输入  0=输入   1=输出
   121  000015   2DF7(1)          MOV  A, #0F7H
   122  000016   2FC2(1)          B0MOV P2M,  A;                // P2.3输入 P2.4输出驱动LED红色电源指示灯 P2.1输出驱动8个LED灯 高电平有效
   123  000017             
   124  000017   2DFF(1)          MOV  A, #0ffH
   125  000018   2FC1(1)          B0MOV P1M,  A;                // P1.0输出驱动LED 蓝色触摸灯    P1.3P1.2输出驱动两组继电器
   126  000019   2DFF(1)          MOV  A, #0ffH
   127  00001A   2FC5(1)          B0MOV P5M,  A;                // P5.4输出 蜂鸣器输出保持高电平
   128  00001B                     
   129  00001B   1E01(1)          MOV   A, 0x01;
   130  00001C   2FE0(1)          B0MOV P0UR, A;                // 0=不上拉 1=上拉 P0.0拉
   131  00001D   1E00(1)          MOV   A, 0x00
   132  00001E   2FE2(1)          B0MOV P2UR, A;                //
   133  00001F   2FE1(1)          B0MOV P1UR, A;                // 
   134  000020   2FE5(1)          B0MOV P5UR, A;                //
   135  000021                     
   136  000021   2D5A(1)          MOV    A,#5AH
   137  000022   2FCC(1)          B0MOV  WDTR,A;                //复位看门狗              
   138  000023             
   139  000023   63D1(1)          B0BCLR DELAY1_PIN;         
   140  000024   62D1(1)          B0BCLR DELAY2_PIN; 
   141  000025   64D2(1)  	B0BCLR R_POWER_LED_PIN;
   142  000026   68D1(1)          B0BSET B_BTOUCH_LED_PIN;
   143  000027   64D5(1)          B0BCLR BUZZER_PIN;
   144  000028                
   145  000028   2B00(1)          CLR    sysFlag
   146  000029   2B01(1)          CLR    sysFlag1
   147  00002A   2B07(1)          CLR    btn_value
   148  00002B   2B03(1)          CLR    IR_data
   149  00002C   2B02(1)          CLR    IR_time
   150  00002D   2B06(1)          CLR    IR_bit
   151  00002E   2B09(1)          CLR    IRdata
   152  00002F   2B08(1)          CLR    IR_count
   153  000030   2B0A(1)          CLR    buzzerCntL
   154  000031   2B0B(1)          CLR    buzzerCntH
   155  000032   2B04(1)          CLR    Touch_timeL
   156  000033   2B05(1)          CLR    Touch_timeH
   157  000034   6400(1)          B0BCLR   sysFunFlag   ;上电置0
   158  000035   6101(1)          B0BCLR   light_flag
   159  000036   6F00(1)          B0BSET     buzzerEnableFlag;蜂鸣器响 
   160  000037             
   161  000037                     //--- P00 Config-------------------------------------
   162  000037   2D10(1)          MOV   A, #10H
   163  000038   2FBF(1)          B0MOV PEDGE,  A;               //下降沿触发中断
   164  000039                     ;PEDGE = 0x08;               //上升沿触发中断
   165  000039   60C8(1)          B0BCLR	FP00IRQ;               //清除中断标志
   166  00003A   68C9(1)          B0BSET   FP00IEN;               //P0.0 外部中断(INT0)使能
   167  00003B   6801(1)          B0BSET   edgeFlag;
   168  00003C             
   169  00003C                     //--- T0  Config--定时器T0配置------------------------------------
   170  00003C             		//FT0TB = 0;                  //禁止 RTC
   171  00003C   2D70(1)          MOV  A,  #70H
   172  00003D   2FD8(1)          B0MOV T0M, A;                   // 16M/16/2= 2uS   Fcpu的2分频 
   173  00003E                     //T0M=0x10;                   // 1M/16/128=500uS   Fcpu的128分频
   174  00003E   2DBA(1)          MOV  A,  #0baH   ;
   175  00003F   2FD9(1)          B0MOV T0C,   A ;                    //256-139/2 = 256- 69.5 = 186.5 每139us中断一次 实际上是150us     
   176  000040   64C8(1)  	B0BCLR	FT0IRQ ;                   // T0 中断请求标志清零。
   177  000041   6CC9(1)  	B0BSET 	FT0IEN ;                   //允许响应 T0 中断。
   178  000042   6FD8(1)          B0BSET   FT0ENB;                   //启动定时器T0运行 
   179  000043             
   180  000043                     //--- TC0 PWM Config  蜂鸣器驱动 2K频率-高电平和低电平的时间宽度都为 250μs--------------------------------------
   181  000043   2D70(1)          MOV  A, #70H
   182  000044   2FDA(1)          B0MOV TC0M, A;                  // 16MHz/16=  Fcpu/2   2us  256-250/2=
   183  000045   2D9B(1)          MOV  A, #155
   184  000046   2FCD(1)          B0MOV  TC0R, A;                   //每隔125*2 =250us中断一次
   185  000047   2FDB(1)          B0MOV  TC0C, A;                   //  
   186  000048   6ADA(1)          B0BSET  FALOAD0;                  //使能 TC0 自动装载
   187  000049   61DA(1)          B0BCLR	FTC0OUT;                  //允许P5.4口作PWM输出
   188  00004A   60DA(1)  	B0BCLR	FPWM0OUT;                //允许PWM/BUZZER功能  
   189  00004B   6DC9(1)          B0BSET   FTC0IEN;                  //允许中断Enable TC0 Interrput
   190  00004C   6FDA(1)          B0BSET   FTC0ENB;                  // 定时器开启
   191  00004D                     //----Start Run---------------------------------------
   192  00004D   6FDF(1)          B0BSET   FGIE;                    // Enable all Interrput 
   193  00004E             
   194  00004E             Loop:
   195  00004E   2D5A(1)          MOV    A,#5AH
   196  00004F   2FCC(1)          B0MOV  WDTR,A;                //复位看门狗
   197  000050                 
   198  000050   C054(2)          CALL IR_deal     ;红外处理
   199  000051   C09B(2)          CALL touch_check ;触摸检测
   200  000052   C0CB(2)          CALL touch_deal  ;触摸处理
   201  000053                  
   202  000053   804E(2)          JMP Loop;
   203  000054             
   204  000054             
   205  000054             ;**************** 红外处理************************
   206  000054             IR_deal: 
   207  000054   7800(1+S)          B0BTS1     IR_Flag
   208  000055   8085(2)          JMP        IR_deal_end
   209  000056   2DE6(1)          MOV        A,#230
   210  000057   0708(1+S)          CMPRS      A,IR_count
   211  000058   8083(2)          JMP        IR_noden      ;IR_count != 230 还存在 IR_count > 230的情况
   212  000059             IR_den:
   213  000059   6000(1)          B0BCLR     IR_Flag       ;IR_count = 230 //红外数据接收完成后 230*139 = 31970us处理数据
   214  00005A   2B08(1)          CLR        IR_count
   215  00005B                     
   216  00005B                     ;B0BTS0     sysFunFlag ;红外按键是在系统功能未开启的情况下才能使用，如果sysFunFlag=1则系统功能己开启
   217  00005B                     ;JMP        IR_deal_end
   218  00005B             
   219  00005B   2E09(1)          B0MOV      A, IRdata
   220  00005C   2A0F(1)  	AND        A, #0FH
   221  00005D   2F0C(1)  	B0MOV      tempVal,A  ;低四位代表IR_LIGHT_BUTTON关键值 
   222  00005E                     
   223  00005E   6286(1)          B0BCLR     FC          ;高四位代表IR_ONOFF_BUTTON开键值
   224  00005F   0909(1)          RRCM       IRdata
   225  000060   6286(1)          B0BCLR     FC 
   226  000061   0909(1)          RRCM       IRdata
   227  000062   6286(1)          B0BCLR     FC 
   228  000063   0909(1)          RRCM       IRdata
   229  000064   6286(1)          B0BCLR     FC 
   230  000065   0909(1)          RRCM       IRdata 
   231  000066   2E09(1)          B0MOV      A, IRdata
   232  000067   070C(1+S)          CMPRS      A, tempVal
   233  000068   806B(2)  	JMP        value_noDen    ;如果两键值不相等则继续判断
   234  000069   2B09(1)          CLR        IRdata
   235  00006A   8085(2)          JMP        IR_deal_end ;如果两键值相等则退出
   236  00006B             value_noDen:      ;如果两键值不相等则继续判断
   237  00006B   2B09(1)          CLR        IRdata
   238  00006C   7286(1+S)          B0BTS0    FC
   239  00006D   8074(2)          JMP        onoffDeal ;没借位，说明IR_ONOFF_BUTTON开键值 > IR_LIGHT_BUTTON关键值 
   240  00006E                                          ;借位，说明IR_ONOFF_BUTTON开键值 < IR_LIGHT_BUTTON关键值
   241  00006E                     ;灯键处理 
   242  00006E   6F00(1)          B0BSET     buzzerEnableFlag;蜂鸣器响
   243  00006F   6C00(1)  	B0BSET     sysFunFlag
   244  000070   60D1(1)  	B0BCLR     B_BTOUCH_LED_PIN;
   245  000071   6CD2(1)          B0BSET     R_POWER_LED_PIN;
   246  000072   C0D9(2)          CALL       btn_inc_fun     ;调用键值加1处理函数
   247  000073   8085(2)          JMP        IR_deal_end ; 
   248  000074              
   249  000074             onoffDeal:   ;电源开关键开处理
   250  000074   6F00(1)          B0BSET     buzzerEnableFlag;蜂鸣器响 
   251  000075   7400(1+S)          B0BTS0     sysFunFlag ;红外按键是在系统功能未开启的情况下才能使用，如果sysFunFlag=1则系统功能己开启
   252  000076   8085(2)          JMP        IR_deal_end ;
   253  000077             
   254  000077   7101(1+S)          B0BTS0     light_flag
   255  000078   807E(2)          JMP        light_off_d ;关处理
   256  000079   69D2(1)          B0BSET     LIGHT_PIN   ;开灯处理灯亮
   257  00007A   6901(1)          B0BSET     light_flag
   258  00007B   6CD2(1)         	B0BSET     R_POWER_LED_PIN;
   259  00007C   60D1(1)          B0BCLR     B_BTOUCH_LED_PIN;
   260  00007D   8085(2)          JMP        IR_deal_end ;
   261  00007E             light_off_d:
   262  00007E   61D2(1)          B0BCLR     LIGHT_PIN   ;关灯处理
   263  00007F   6101(1)          B0BCLR     light_flag
   264  000080   64D2(1)  	B0BCLR     R_POWER_LED_PIN;
   265  000081   68D1(1)          B0BSET     B_BTOUCH_LED_PIN;
   266  000082   8085(2)          JMP        IR_deal_end ;
   267  000083             	
   268  000083             IR_noden:
   269  000083   7A86(1+S)        B0BTS1     FC
   270  000084   8059(2)        JMP         IR_den ;发生了借位说明IR_count > 230
   271  000085                   ;JMP         IR_deal_end            
   272  000085             IR_deal_end:
   273  000085   7A01(1+S)        B0BTS1   int0_flag
   274  000086   0E00(2)        RET
   275  000087   2DF0(1)        MOV      A, #0F0H
   276  000088   0702(1+S)        CMPRS    A,IR_time 
   277  000089   8096(2)        JMP      IR_BUDEN0
   278  00008A             IR_DEN0:
   279  00008A                   //--- P00 Config-------------------------------------
   280  00008A   2D10(1)        MOV   A, #10H
   281  00008B   2FBF(1)        B0MOV PEDGE,  A;               //下降沿触发中断
   282  00008C                   ;PEDGE = 0x08;               //上升沿触发中断
   283  00008C   60C8(1)        B0BCLR	FP00IRQ;               //清除中断标志
   284  00008D   68C9(1)        B0BSET   FP00IEN;               //P0.0 外部中断(INT0)使能
   285  00008E   6801(1)        B0BSET   edgeFlag;
   286  00008F   6201(1)        B0BCLR   int0_flag
   287  000090   6000(1)        B0BCLR   IR_Flag   ;红外数据接收完成标志位置1
   288  000091   2B06(1)        CLR      IR_bit    ;位数变量清零
   289  000092   6500(1)        B0BCLR   isRec
   290  000093   2D5A(1)        MOV    A,#5AH
   291  000094   2FCC(1)        B0MOV  WDTR,A;                //复位看门狗    
   292  000095   0E00(2)        RET
   293  000096             IR_BUDEN0:
   294  000096   7A86(1+S)        B0BTS1   FC
   295  000097   808A(2)        JMP      IR_DEN0
   296  000098             
   297  000098   2D5A(1)        MOV    A,#5AH
   298  000099   2FCC(1)        B0MOV  WDTR,A;                //复位看门狗    
   299  00009A   0E00(2)        RET
   300  00009B             ;******************end***********************************
   301  00009B             ;/*************触摸功能*********************/
   302  00009B             
   303  00009B             ;-------------触摸输出检测-------------------
   304  00009B             ;无触摸时高电平，有触摸时低电平时长大于300ms
   305  00009B             touch_check:
   306  00009B   73D2(1+S)      B0BTS0   TOUCH_PIN 
   307  00009C   80B4(2)      JMP      touch_Hight        ;当引脚高电平   
   308  00009D   7100(1+S)      B0BTS0   Touch_flag       ;当引脚为低电平执行
   309  00009E   80B1(2)      JMP      touch_L;当Touch_flag=0时执行
   310  00009F                                 ;当Touch_flag=1时执行 //139微秒 *500 = 69.5ms
   311  00009F   2D01(1)      MOV      A,#1 ; 500 =1F4H    
   312  0000A0   0705(1+S)      CMPRS    A,Touch_timeH
   313  0000A1   80A9(2)      JMP      Hsubnden
   314  0000A2   2DF4(1)      MOV      A,#0f4H  ;Touch_timeH =1 处理 比较低字节 
   315  0000A3   0704(1+S)      CMPRS    A,Touch_timeL
   316  0000A4   80A6(2)      JMP      Lsubnden    ;跳至低字节不相等，高字节相等，处理
   317  0000A5   80AC(2)      JMP      daden500;低字节相等，高字节相等，处理
   318  0000A6                 
   319  0000A6             Lsubnden:
   320  0000A6   7A86(1+S)       B0BTS1   FC 
   321  0000A7   80AC(2)       JMP      daden500;c=0发生借位，Touch_timeL>#F4H且 高字节相等，
   322  0000A8   80C8(2)       JMP      touch_check_end ;c=0未发生借位，
   323  0000A9             
   324  0000A9             Hsubnden:   ;Touch_timeH !=1 处理 
   325  0000A9   7A86(1+S)      B0BTS1   FC
   326  0000AA   80AC(2)      JMP      daden500   ;进位标志置 0 借位发生，表明Touch_timeH > 1 即大于500
   327  0000AB   80C8(2)      JMP      touch_check_end ;Touch_timeH < 1
   328  0000AC             
   329  0000AC             daden500:    ; Touch_timeH  Touch_timeL >=500 执行   
   330  0000AC   2B04(1)      CLR       Touch_timeL
   331  0000AD   2B05(1)      CLR       Touch_timeH
   332  0000AE   6900(1)      B0BSET   Touch_flag
   333  0000AF   6C00(1)      B0BSET   sysFunFlag
   334  0000B0   80C8(2)      JMP      touch_check_end 
   335  0000B1             touch_L:
   336  0000B1   2B04(1)      CLR      Touch_timeL
   337  0000B2   2B05(1)      CLR      Touch_timeH
   338  0000B3   80C8(2)      JMP      touch_check_end
   339  0000B4             
   340  0000B4             
   341  0000B4             touch_Hight:    ;当引脚为高电平执行  
   342  0000B4   7900(1+S)      B0BTS1   Touch_flag        ;当引脚为低电平执行
   343  0000B5   80C6(2)      JMP      touch_flag_L;当Touch_flag=0时执行
   344  0000B6                 ;处理if(Touch_time > 2000) 
   345  0000B6                 ;2000 hex 7D0
   346  0000B6   2D07(1)      MOV      A,   #7   ; 先判断高位 Touch_timeH=7   
   347  0000B7   0705(1+S)      CMPRS    A,   Touch_timeH
   348  0000B8   80C0(2)      JMP      Hnoden 
   349  0000B9             Hden:;高字节相等继续判断低字节
   350  0000B9   2DD0(1)      MOV      A,   #0d0H 
   351  0000BA   0704(1+S)      CMPRS    A,   Touch_timeL
   352  0000BB   80C3(2)      JMP      Lnoden
   353  0000BC             Lden:;高低字节都相等  说明计数等于2000 处理等于大于2000
   354  0000BC   2B04(1)      CLR      Touch_timeL    
   355  0000BD   2B05(1)      CLR      Touch_timeH
   356  0000BE   6100(1)      B0BCLR   Touch_flag
   357  0000BF   80C8(2)      JMP      touch_check_end
   358  0000C0             
   359  0000C0             Hnoden:;高字节不相等
   360  0000C0   7286(1+S)      B0BTS0   FC    
   361  0000C1   80C8(2)      JMP      touch_check_end ;没发生借位
   362  0000C2   80BC(2)      JMP      Lden ; Touch_timeH>7 说明计数大于2000 处理大于2000
   363  0000C3             Lnoden:    ;处理高字节等于7低字节不等于D0H
   364  0000C3   7286(1+S)      B0BTS0   FC    
   365  0000C4   80C8(2)      JMP      touch_check_end ;没发生借位，说明Touch_timeL<7DH
   366  0000C5   80BC(2)      JMP      Lden ;发生借位 Touch_timeH=7,Touch_timeL>7DH 说明计数大于2000 处理大于2000
   367  0000C6             touch_flag_L:
   368  0000C6   2B04(1)      CLR       Touch_timeL
   369  0000C7   2B05(1)      CLR       Touch_timeH
   370  0000C8                ; JMP       touch_check_end
   371  0000C8             touch_check_end:
   372  0000C8   2D5A(1)      MOV    A,#5AH
   373  0000C9   2FCC(1)      B0MOV  WDTR,A;                //复位看门狗    
   374  0000CA   0E00(2)      RET
   375  0000CB             ;-------------------------------------------------------------
   376  0000CB             ;-----------------触摸处理------------------------------------
   377  0000CB             touch_deal:
   378  0000CB   7100(1+S)      B0BTS0     Touch_flag   ; 判断触摸标志==1
   379  0000CC   80CF(2)      JMP        deal_den1    ;Touch_flag==1处理
   380  0000CD   6200(1)      B0BCLR     touch_preFlag ;Touch_flag==0处理
   381  0000CE   80D6(2)      JMP        touch_deal_end
   382  0000CF             
   383  0000CF             deal_den1:
   384  0000CF   7200(1+S)      B0BTS0     touch_preFlag   ; 判断上次触摸标志touch_preFlag==0？
   385  0000D0   80D6(2)      JMP        touch_deal_end  ; touch_preFlag=1 处理
   386  0000D1   6A00(1)      B0BSET     touch_preFlag   ;touch_preFlag=0 处理 
   387  0000D2   6F00(1)      B0BSET     buzzerEnableFlag;蜂鸣器响
   388  0000D3   60D1(1)      B0BCLR     B_BTOUCH_LED_PIN;
   389  0000D4   6CD2(1)      B0BSET     R_POWER_LED_PIN;
   390  0000D5   C0D9(2)      CALL       btn_inc_fun     ;调用键值加1处理函数
   391  0000D6             touch_deal_end:
   392  0000D6   2D5A(1)      MOV    A,#5AH
   393  0000D7   2FCC(1)      B0MOV  WDTR,A;                //复位看门狗    
   394  0000D8   0E00(2)      RET 
   395  0000D9             
   396  0000D9             btn_inc_fun:   ;键值加1处理函数 判断键值是否超过最大值BUTTON_VALUE_MAX
   397  0000D9   1607(1+S)      INCMS      btn_value
   398  0000DA   0000(1)      NOP
   399  0000DB   2D07(1)      MOV        A, #BUTTON_VALUE_MAX
   400  0000DC   0707(1+S)      CMPRS      A, btn_value
   401  0000DD   80E2(2)      JMP        deal_noden2   ;btn_value不等BUTTON_VALUE_MAX
   402  0000DE             deal_den2:                   ;btn_value相等BUTTON_VALUE_MAX
   403  0000DE   2D01(1)      MOV        A,  #1  
   404  0000DF   2F07(1)      B0MOV      btn_value,A
   405  0000E0   C0E8(2)      CALL       delay_action_fun
   406  0000E1   80E5(2)      JMP        btn_end
   407  0000E2             deal_noden2:    ;btn_value不等BUTTON_VALUE_MAX            
   408  0000E2   7A86(1+S)      B0BTS1     FC
   409  0000E3   80DE(2)      JMP        deal_den2 ;发生借位说明btn_value>BUTTON_VALUE_MAX
   410  0000E4   C0E8(2)      CALL       delay_action_fun
   411  0000E5                 ;JMP        btn_end     
   412  0000E5             btn_end:
   413  0000E5   2D5A(1)      MOV    A,#5AH
   414  0000E6   2FCC(1)      B0MOV  WDTR,A;                //复位看门狗    
   415  0000E7   0E00(2)      RET 	
   416  0000E8             ;-------------------------------------------------------------
   417  0000E8             ;***************************END********************************
   418  0000E8             
   419  0000E8             ;8888888888*继电器动作函数*8888888888888888888
   420  0000E8             delay_action_fun: 
   421  0000E8   2D00(1)      MOV      A,#0
   422  0000E9   0707(1+S)      CMPRS    A, btn_value
   423  0000EA   80EE(2)      JMP      cmpare1
   424  0000EB   63D1(1)      B0BCLR   DELAY1_PIN  ;btn_value=0 处理
   425  0000EC   62D1(1)      B0BCLR   DELAY2_PIN  ; 断开所有继电器
   426  0000ED   8114(2)      JMP      delay_fun_end
   427  0000EE             cmpare1:
   428  0000EE   2D01(1)      MOV      A, #1
   429  0000EF   0707(1+S)      CMPRS    A, btn_value 
   430  0000F0   80F4(2)      JMP      cmpare2
   431  0000F1   6BD1(1)      B0BSET   DELAY1_PIN;btn_value=1 处理
   432  0000F2   62D1(1)      B0BCLR   DELAY2_PIN  ;继电器2断开继电器1吸合
   433  0000F3   8114(2)      JMP      delay_fun_end
   434  0000F4             cmpare2:
   435  0000F4   2D02(1)      MOV      A, #2
   436  0000F5   0707(1+S)      CMPRS    A, btn_value 
   437  0000F6   80FA(2)      JMP      cmpare3
   438  0000F7   63D1(1)      B0BCLR   DELAY1_PIN ;btn_value=2 处理
   439  0000F8   6AD1(1)      B0BSET   DELAY2_PIN ;继电器1断开继电器2吸合
   440  0000F9   8114(2)      JMP      delay_fun_end
   441  0000FA             cmpare3:
   442  0000FA   2D03(1)      MOV      A, #3
   443  0000FB   0707(1+S)      CMPRS    A, btn_value 
   444  0000FC   8100(2)      JMP      cmpare4
   445  0000FD   6BD1(1)      B0BSET   DELAY1_PIN ;btn_value=3 处理
   446  0000FE   6AD1(1)      B0BSET   DELAY2_PIN ;吸合所有继电器
   447  0000FF   8114(2)      JMP      delay_fun_end
   448  000100             cmpare4:
   449  000100   2D04(1)      MOV      A, #4
   450  000101   0707(1+S)      CMPRS    A, btn_value 
   451  000102   8105(2)      JMP      cmpare5
   452  000103   69D2(1)      B0BSET   LIGHT_PIN;btn_value=4 处理 灯点亮           
   453  000104   8114(2)      JMP      delay_fun_end
   454  000105             cmpare5:
   455  000105   2D05(1)      MOV      A, #5
   456  000106   0707(1+S)      CMPRS    A, btn_value 
   457  000107   810C(2)      JMP      cmpare6
   458  000108   69D2(1)      B0BSET   LIGHT_PIN ;btn_value=5 处理灯亮
   459  000109   63D1(1)      B0BCLR   DELAY1_PIN ;
   460  00010A   62D1(1)      B0BCLR   DELAY2_PIN; 断开所有继电器
   461  00010B   8114(2)      JMP      delay_fun_end
   462  00010C             cmpare6:
   463  00010C   2D06(1)      MOV      A, #6
   464  00010D   0707(1+S)      CMPRS    A, btn_value 
   465  00010E   8114(2)      JMP      delay_fun_end
   466  00010F   61D2(1)      B0BCLR   LIGHT_PIN ;btn_value=6 处理 处理灯灭
   467  000110   6400(1)      B0BCLR   sysFunFlag  
   468  000111   6101(1)      B0BCLR   light_flag    
   469  000112   64D2(1)      B0BCLR   R_POWER_LED_PIN;
   470  000113   68D1(1)      B0BSET   B_BTOUCH_LED_PIN;
   471  000114                 ;DELAY1_PIN = DELAY_OFF ;
   472  000114                 ;DELAY2_PIN = DELAY_OFF ; 断开所有继电器
   473  000114                ; JMP      delay_fun_end
   474  000114              
   475  000114             delay_fun_end:
   476  000114   0E00(2)       RET
   477  000115             ;8888888888888888*end*888888888888888888888
   478  000115             ;开始标志脉冲只有一个9ms高电平
   479  000115             ;脉冲宽度说明：高电平时宽1.21ms低电平时宽0.56ms为0 ，高电平时宽0.56ms低电平时宽1.21ms为1
   480  000115             ;              前面1个脉冲和最后两个脉冲不计入内，取中间八个脉冲
   481  000115             ;电源开关键地址：1-10110000-00   0x0d
   482  000115             ;灯键地址：      1-10111011-00   0xdd
   483  000115             IntService:
   484  000115   0400(1)        PUSH
   485  000116             ;********************** INT0 中断服务程序************************** 
   486  000116                    //P00 interrput//P0.0 外部中断(INT0)
   487  000116   78C8(1+S)        B0BTS1   FP00IRQ ; 检测 P00IRQ。 ; INT0 中断服务程序
   488  000117   8153(2)        JMP      T0_int ; P00IRQ = 0。
   489  000118   60C8(1)        B0BCLR   FP00IRQ ; P00IRQ 清零。
   490  000119   6A01(1)        B0BSET   int0_flag
   491  00011A             
   492  00011A   7801(1+S)        B0BTS1   edgeFlag  ;
   493  00011B   812C(2)        JMP      Rising_edge;跳至上升沿中断处理 
   494  00011C                
   495  00011C               ;Falling edge    //下降沿中断  
   496  00011C   2D08(1)        MOV      A, #8   ; //触发方式为上沿触发
   497  00011D   2FBF(1)        B0MOV    PEDGE,A
   498  00011E   6001(1)        B0BCLR   edgeFlag  
   499  00011F   2D37(1)        MOV      A, #55     ;//判断引导码(9ms+1.12ms)（0.56ms+1.12ms）
   500  000120   0702(1+S)        CMPRS    A,IR_time
   501  000121   8128(2)        JMP      timeBuDen  ;跳至IR_time!=55处理
   502  000122             rising_result:             ; IR_time=55处理
   503  000122   2B03(1)        CLR      IR_data
   504  000123   6D00(1)        B0BSET   isRec
   505  000124   2D00(1)        MOV      A,#0
   506  000125   2F06(1)        B0MOV    IR_bit,A  ; //位数变量自增
   507  000126   2B02(1)        CLR      IR_time   ;//清零时间宽度计数值
   508  000127   8150(2)        JMP      Exit_int0      
   509  000128             timeBuDen:  
   510  000128   7A86(1+S)        B0BTS1   FC
   511  000129   8122(2)        JMP      rising_result
   512  00012A   2B02(1)        CLR      IR_time   ;//清零时间宽度计数值
   513  00012B   8150(2)        JMP      Exit_int0  ;没借位说明IR_time<60 
   514  00012C             
   515  00012C             Rising_edge:;上升沿中断
   516  00012C   2D10(1)        MOV      A,   #010H
   517  00012D   2FBF(1)        B0MOV    PEDGE,A
   518  00012E   6801(1)        B0BSET   edgeFlag	 ;配置触发方式为下降沿触发;
   519  00012F                   		         ;开始记录时间长 1-0码 	
   520  00012F   7D00(1+S)        B0BTS1   isRec     
   521  000130   814C(2)        JMP      preExit_int0
   522  000131                  
   523  000131   2D05(1)        MOV      A, #5
   524  000132   0702(1+S)        CMPRS    A, IR_time
   525  000133   8137(2)        JMP      noDen5
   526  000134             timeDen5:                ;IR_time>=5,若“时间间隔”比5大那肯定是“1码”反之为“0码”
   527  000134   2D80(1)        MOV      A, #80H  
   528  000135   1903(1)        OR       IR_data, A ;//通过按位或运算高位填1    		
   529  000136   8139(2)        JMP      dataOK
   530  000137             noDen5:
   531  000137   7A86(1+S)        B0BTS1   FC			    		
   532  000138   8134(2)        JMP      timeDen5  ;产生借位说明IR_time>5			                   
   533  000139             dataOK:	 
   534  000139   2B02(1)        CLR      IR_time	 ;清零时间宽度计数值        //若数据没有拼合完8次
   535  00013A   1606(1+S)        INCMS    IR_bit 	 ;位数变量自增	
   536  00013B   2D09(1)        MOV      A, #9	 ;如果达到了9位（引导码+8个数据位）
   537  00013C   0706(1+S)        CMPRS    A, IR_bit
   538  00013D   814E(2)        JMP      bitBuden9
   539  00013E                                      ;IR_bit达到了9位（引导码+8个数据位）处理
   540  00013E   6800(1)        B0BSET   IR_Flag   ;红外数据接收完成标志位置1
   541  00013F   2B06(1)        CLR      IR_bit    ;位数变量清零
   542  000140   6500(1)        B0BCLR   isRec
   543  000141   2D0D(1)        MOV      A, #IR_LIGHT_BUTTON      
   544  000142   0703(1+S)        CMPRS    A, IR_data     
   545  000143   8146(2)        JMP      IRd_buDenLight
   546  000144   1609(1+S)        INCMS    IRdata
   547  000145   8150(2)        JMP      Exit_int0
   548  000146             IRd_buDenLight:
   549  000146   2DDD(1)        MOV      A, #IR_ONOFF_BUTTON
   550  000147   0703(1+S)        CMPRS    A, IR_data 
   551  000148   8150(2)        JMP      Exit_int0
   552  000149   2D10(1)        MOV      A, #0x10
   553  00014A   1309(1)        ADD      IRdata,A
   554  00014B   8150(2)        JMP      Exit_int0
   555  00014C             preExit_int0:
   556  00014C   2B02(1)         CLR      IR_time	 ;清零时间宽度计数值      
   557  00014D   8150(2)         JMP      Exit_int0
   558  00014E             bitBuden9:			 
   559  00014E   6286(1)         B0BCLR  FC    ;通过右移运算“腾出”位置准备下一位判定
   560  00014F   0903(1)         RRCM    IR_data 
   561  000150                    ;JMP      Exit_int0 							
   562  000150             Exit_int0:
   563  000150   2B08(1)         CLR       IR_count ;//有接收数据则清零延时计数器  
   564  000151   68C9(1)         B0BSET    FP00IEN  ;//P0.0 外部中断(INT0)使能
   565  000152   818C(2)         JMP   Exit_int
   566  000153             
   567  000153             ;******************** T0 中断程序********************************
   568  000153             T0_int:  ; T0 中断程序。//定时器T0中断 139us中断一次
   569  000153   7CC8(1+S)  	B0BTS1   FT0IRQ    ; 检查是否有 T0 中断请求标志。
   570  000154   8165(2)  	JMP      TC0_int   ;
   571  000155   64C8(1)  	B0BCLR   FT0IRQ    ;清 T0IRQ。 ;// T0 中断请求标志清零。
   572  000156   2DBA(1)  	MOV      A, #186   ;256-139/2 = 256- 69.5 = 186.5 每139us中断一次
   573  000157   2FD9(1)  	B0MOV    T0C, A
   574  000158   2DF0(1)          MOV      A, #0F0H
   575  000159   0702(1+S)          CMPRS    A,IR_time 
   576  00015A   1602(1+S)          INCMS    IR_time
   577  00015B   1604(1+S)          INCMS    Touch_timeL
   578  00015C   815E(2)          JMP      timeLno0
   579  00015D   1605(1+S)          INCMS    Touch_timeH  
   580  00015E             timeLno0:      
   581  00015E   7000(1+S)          B0BTS0   IR_Flag        
   582  00015F   1608(1+S)          INCMS    IR_count   ;//接收到红外数据,计数器加1
   583  000160   2D70(1)          MOV      A, #70H
   584  000161   2FD8(1)          B0MOV    T0M, A     ;16M/16/2= 2uS   Fcpu的2分频
   585  000162                 
   586  000162   6CC9(1)          B0BSET   FT0IEN     ; //允许响应 T0 中断。
   587  000163   6FD8(1)          B0BSET   FT0ENB     ; //启动定时器T0运行 
   588  000164   818C(2)          JMP   Exit_int
   589  000165             
   590  000165             ;*************TC0中断子程序***********************************
   591  000165             TC0_int:  ; TC0 中断程序。 250uS
   592  000165   7DC8(1+S)          B0BTS1 FTC0IRQ   ; 检查是否有 TC0 中断请求标志。 
   593  000166   818C(2)  	JMP EXIT_INT     ; TC0IRQ = 0，退出中断。
   594  000167   65C8(1)  	B0BCLR FTC0IRQ   ; 清 TC0IRQ。
   595  000168   2D70(1)          MOV  A, #70H
   596  000169   2FDA(1)          B0MOV TC0M, A;                  // 16MHz/16=  Fcpu/2   2us  256-250/2= 
   597  00016A   2D9B(1)          MOV  A, #155
   598  00016B   2FCD(1)          B0MOV  TC0R, A;                   //每隔125*2 =250us中断一次
   599  00016C   2FDB(1)          B0MOV  TC0C, A;                  
   600  00016D   6ADA(1)          B0BSET  FALOAD0;                  //使能 TC0 自动装载
   601  00016E   61DA(1)          B0BCLR	FTC0OUT;                  //允许P5.4口作PWM输出
   602  00016F   60DA(1)  	B0BCLR	FPWM0OUT;                //允许PWM/BUZZER功能  
   603  000170                
   604  000170   7F00(1+S)          B0BTS1    buzzerEnableFlag
   605  000171   8188(2)          JMP       BUZZER_OFF_DEAL
   606  000172                         
   607  000172   160A(1+S)          INCMS     buzzerCntL
   608  000173   8175(2)          JMP       banDaYu3000
   609  000174   160B(1+S)          INCMS     buzzerCntH
   610  000175             banDaYu3000:   ;1000 = 0x3E8
   611  000175   2D03(1)          MOV       A, #03H
   612  000176   070B(1+S)          CMPRS     A, buzzerCntH
   613  000177   8180(2)          JMP       BUZZER_BUDEN   ;跳转到buzzerCnt < 1000
   614  000178   2DE8(1)          MOV       A, #0E8H       ;高字节相等再判断低字节
   615  000179   070A(1+S)          CMPRS     A, buzzerCntL      
   616  00017A   8180(2)          JMP       BUZZER_BUDEN   ;高字节相等低字节不相等
   617  00017B   6700(1)          B0BCLR    buzzerEnableFlag
   618  00017C   2B0A(1)          CLR       buzzerCntL
   619  00017D   2B0B(1)          CLR       buzzerCntH
   620  00017E   64D5(1)          B0BCLR    BUZZER_PIN
   621  00017F   818A(2)          JMP       TC0_int_end
   622  000180             
   623  000180             BUZZER_BUDEN:
   624  000180   7E00(1+S)          B0BTS1    buzzerFlag
   625  000181   8185(2)  	JMP       buzzerIs0
   626  000182   6600(1)          B0BCLR    buzzerFlag
   627  000183   64D5(1)          B0BCLR    BUZZER_PIN
   628  000184   818A(2)          JMP       TC0_int_end
   629  000185             buzzerIs0:
   630  000185   6E00(1)          B0BSET    buzzerFlag
   631  000186   6CD5(1)  	B0BSET	  BUZZER_PIN     
   632  000187   818A(2)          JMP       TC0_int_end
   633  000188             
   634  000188             BUZZER_OFF_DEAL:
   635  000188   64D5(1)          B0BCLR    BUZZER_PIN
   636  000189   818A(2)          JMP       TC0_int_end
   637  00018A             TC0_int_end:
   638  00018A   6DC9(1)          B0BSET   FTC0IEN;                  ;//允许中断Enable TC0 Interrput
   639  00018B   6FDA(1)          B0BSET   FTC0ENB;                 ; // 定时器开启
   640  00018C                     ;JMP   Exit_int	
   641  00018C             Exit_int: ;退出中断
   642  00018C             
   643  00018C   0500(1)        POP
   644  00018D   0F00(2)        RETI
   645  00018E                   ENDP
   646  00018E             
