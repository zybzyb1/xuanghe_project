     1  000000             
     2  000000             ;********************************************************
     3  000000             ;晶振  RC: 内部16MHz          当前版本: V0
     4  000000             ;目标 MCU: SN8P2501BP,SOP14   
     5  000000             ;开发作者:zyb                 烧录校验:  
     6  000000             ;开始日期: 2022.9.26          完成日期: 2022.9.X
     7  000000             ;本源码适用于发热管加热电路控制板，硬件部分由两路继电器控制
     8  000000             ;输入控制由摇控器与触摸开关两路分别进行控制两路加热
     9  000000             ;********************************************************
    10  000000             ;               _____________  ____________
    11  000000             ;              |             \/            |
    12  000000             ;             -|P2.2                   P2.3|-TOUCH_PIN触摸输入脚
    13  000000             ;        LIGHT-|P2.1                   P2.4|-B_TOUCH_LED_PIN蓝色触摸指示灯
    14  000000             ;             -|P2.0                   P2.5|-
    15  000000             ;          +5V-|VDD                     VSS|-GND
    16  000000             ;       RELAY1-|P1.3/XIN          INT0/P0.0|-IR_PIN红外输入脚
    17  000000             ;       RELAY2-|1.2/XOUT               P1.0|-R_POWER_LED红色电源指示灯
    18  000000             ;             -|P1.1/RET/VPP   PWM/BZ0/P5.4|-pwm/buzzer
    19  000000             ;              |___________________________|
    20  000000             ;                   SN8P2511P,DIP8
    21  000000             ;********************************************************
    22  000000             ;#include <SN8P2501D.h>          // 头文件
    23  000000             ;#include "global.h"             //
    24  000000             
    25  000000             ;#define   IR_ONOFF_BUTTON     0x1B    //红外摇控板开关键值
    26  000000             ;#define   IR_LIGHT_BUTTON     0xBB    //红外摇控板加热丝档位调整键值
    27  000000             
    28  000000             ;#define   DELAY1_OFF     FP13=0    
    29  000000             ;#define   DELAY2_OFF     FP12=0 
    30  000000             ;#define   DELAY1_ON      FP13=1
    31  000000             ;#define   DELAY2_ON      FP12=1 
    32  000000             ;#define   TOUCH_PIN      FP23
    33  000000             ;#define   BUZZER_OFF     FP54=1
    34  000000             ;#define   BUZZER_ON      FP54=0
    35  000000             
    36  000000             ;#define   BUTTON_VALUE_MAX   4    //最大档位, 其实只有3档
    37  000000             ;#define   IR_DATA_BUFFER_SIZE  5
    38  000000             
    39  000000             ;#define  R_POWER_LED_ON      FP24=0
    40  000000             ;#define  B_BTOUCH_LED_ON     FP10=0
    41  000000             ;#define  B_BTOUCH_LED_OFF    FP10=1
    42  000000             ;********************************************************
    43  000000             
    44  000000             
    45  000000             CHIP	SN8P2501D					; Select the CHIP
    46  000000             //{{SONIX_CODE_OPTION
    47  000000             	.Code_Option	LVD		LVD_L		; 2.0V Reset
    48  000000             	.Code_Option	Reset_Pin	P11
    49  000000             	.Code_Option	Watch_Dog	Disable		; Disable Watchdog
    50  000000             	.Code_Option	High_Clk	IHRC_16M	; Internal 16M RC Oscillator
    51  000000             	.Code_Option	Fcpu		#7     ; Fcpu = Fosc/16
    52  000000             	.Code_Option	Security	Enable
    53  000000             	.Code_Option	Noise_Filter	Enable
    54  000000             //}}SONIX_CODE_OPTION
    55  000000             							; Enable the listing function
    56  000000             .DATA
    57  000000             	ORG    00H
    58  000000                    ;宏定义
    59  E 0000001B                IR_ONOFF_BUTTON   equ  0x1B    ;红外摇控板开关键值
    60  E 000000BB                IR_LIGHT_BUTTON   equ  0xBB    ;红外摇控板加热丝档位调整键值
    61  000000                    
    62  E 000300D1                DELAY1_PIN    equ   P1.3    
    63  E 000200D1                DELAY2_PIN    equ   P1.2 
    64  E 000300D2                TOUCH_PIN     equ   P2.3
    65  E 000400D5                BUZZER_PIN    equ   P5.4
    66  E 000100D2                LIGHT_PIN     equ   P2.1
    67  E 000400D2                R_POWER_LED_PIN     equ   P2.4 
    68  E 000000D1                B_BTOUCH_LED_PIN    equ   P1.0
    69  000000             
    70  E 00000007                BUTTON_VALUE_MAX    equ   7    //最大档位, 其实只有6档
    71  E 00000005                IR_DATA_BUFFER_SIZE equ   5
    72  000000             
    73  000000                   
    74  000000                   
    75  000000             
    76  000000                    ;数据定义
    77  0000 D                    sysFlag          ds   1 
    78  0001 D                    sysFlag1         ds   1
    79  0002 D                    IR_time          ds   1		;下降沿之间的时间计数值
    80  0003 D                    IR_data          ds   1		;引导码+8个位数据各自占用的时间
    81  0004 D                    Touch_timeL      ds   1          ;触摸计时器L
    82  0005 D                    Touch_timeH      ds   1          ;触摸计时器H
    83  0006 D                    IR_bit           ds   1		;变量IR_bit用于指示红外数据的位数
    84  0007 D                    btn_value        ds   1          ;红外按键键值寄存器
    85  000008             
    86  0008 D                    IR_count         ds   1          ;红外管接收到数据后延时计数器--250ms
    87  0009 D                    IRdata           ds   1
    88  000A D                    buzzerCntL       ds   1          ;蜂鸣器计数器低字节
    89  000B D                    buzzerCntH       ds   1          ;蜂鸣器计数器高字节
    90  000C D                    tempVal          ds   1          ;临时变量
    91  00000D              
    92  E 00000000                IR_Flag          equ  sysFlag.0 	;红外数据接收完成标志位
    93  E 00010000                Touch_flag       equ  sysFlag.1  ;触摸IC输出标志
    94  E 00020000                touch_preFlag    equ  sysFlag.2  ;上次触摸IC输出标志
    95  E 00030000                timeFunFlag      equ  sysFlag.3;       ;定时功能标志
    96  E 00040000                sysFunFlag       equ  sysFlag.4;       ;系统功能标志
    97  E 00050000                isRec            equ  sysFlag.5;
    98  E 00060000                buzzerFlag       equ  sysFlag.6;
    99  E 00070000                buzzerEnableFlag equ  sysFlag.7;
   100  00000D             
   101  E 00000001                edgeFlag         equ  sysFlag1.0     ;红外管接收脚边沿标识
   102  E 00010001                light_flag       equ  sysFlag1.1     ;照明LED灯状态指示灯
   103  E 00020001                int0_flag        equ  sysFlag1.2     ;
   104  000000             .CODE
   105  000000             	ORG	0				;Code section start
   106  000000   8010(2)  	jmp		Reset				;Reset vector
   107  000001             							;Address 4 to 7 are reserved
   108  000008             	ORG	8
   109  000008   8107(2)          JMP     IntService
   110  000009             
   111  000010                     ORG     10H	
   112  000010             Reset:
   113  000010   2BCA(1)          CLR    OSCM         ;// 普通模式(双时钟)         
   114  000011   2BC9(1)          CLR    INTEN        ;                
   115  000012   2BC8(1)          CLR    INTRQ        ;               
   116  000013                   
   117  000013                     //--- I0 Config --------------------------------------
   118  000013   2DFE(1)          MOV  A, #0FEH
   119  000014   2FB8(1)          B0MOV P0M,  A;                // P00输入  0=输入   1=输出
   120  000015   2DF7(1)          MOV  A, #0F7H
   121  000016   2FC2(1)          B0MOV P2M,  A;                // P2.3输入 P2.4输出驱动LED红色电源指示灯 P2.1输出驱动8个LED灯 高电平有效
   122  000017             
   123  000017   2DFF(1)          MOV  A, #0ffH
   124  000018   2FC1(1)          B0MOV P1M,  A;                // P1.0输出驱动LED 蓝色触摸灯    P1.3P1.2输出驱动两组继电器
   125  000019   2DFF(1)          MOV  A, #0ffH
   126  00001A   2FC5(1)          B0MOV P5M,  A;                // P5.4输出 蜂鸣器输出保持高电平
   127  00001B                     
   128  00001B   1E01(1)          MOV   A, 0x01;
   129  00001C   2FE0(1)          B0MOV P0UR, A;                // 0=不上拉 1=上拉 P0.0拉
   130  00001D   1E00(1)          MOV   A, 0x00
   131  00001E   2FE2(1)          B0MOV P2UR, A;                //
   132  00001F   2FE1(1)          B0MOV P1UR, A;                // 
   133  000020   2FE5(1)          B0MOV P5UR, A;                //
   134  000021             
   135  000021   63D1(1)          B0BCLR DELAY1_PIN;         
   136  000022   62D1(1)          B0BCLR DELAY2_PIN; 
   137  000023   64D2(1)  	B0BCLR R_POWER_LED_PIN;
   138  000024   68D1(1)          B0BSET B_BTOUCH_LED_PIN;
   139  000025   64D5(1)          B0BCLR BUZZER_PIN;
   140  000026                
   141  000026   2B00(1)          CLR    sysFlag
   142  000027   2B01(1)          CLR    sysFlag1
   143  000028   2B07(1)          CLR    btn_value
   144  000029   2B03(1)          CLR    IR_data
   145  00002A   2B02(1)          CLR    IR_time
   146  00002B   2B06(1)          CLR    IR_bit
   147  00002C   2B09(1)          CLR    IRdata
   148  00002D   2B08(1)          CLR    IR_count
   149  00002E   2B0A(1)          CLR    buzzerCntL
   150  00002F   2B0B(1)          CLR    buzzerCntH
   151  000030   2B04(1)          CLR    Touch_timeL
   152  000031   2B05(1)          CLR    Touch_timeH
   153  000032   6400(1)          B0BCLR   sysFunFlag   ;上电置0
   154  000033   6101(1)          B0BCLR   light_flag
   155  000034   6F00(1)          B0BSET     buzzerEnableFlag;蜂鸣器响 
   156  000035             
   157  000035                     //--- P00 Config-------------------------------------
   158  000035   2D10(1)          MOV   A, #10H
   159  000036   2FBF(1)          B0MOV PEDGE,  A;               //下降沿触发中断
   160  000037                     ;PEDGE = 0x08;               //上升沿触发中断
   161  000037   60C8(1)          B0BCLR	FP00IRQ;               //清除中断标志
   162  000038   68C9(1)          B0BSET   FP00IEN;               //P0.0 外部中断(INT0)使能
   163  000039   6801(1)          B0BSET   edgeFlag;
   164  00003A             
   165  00003A                     //--- T0  Config--定时器T0配置------------------------------------
   166  00003A             		//FT0TB = 0;                  //禁止 RTC
   167  00003A   2D70(1)          MOV  A,  #70H
   168  00003B   2FD8(1)          B0MOV T0M, A;                   // 16M/16/2= 2uS   Fcpu的2分频 
   169  00003C                     //T0M=0x10;                   // 1M/16/128=500uS   Fcpu的128分频
   170  00003C   2DBA(1)          MOV  A,  #0baH   ;
   171  00003D   2FD9(1)          B0MOV T0C,   A ;                    //256-139/2 = 256- 69.5 = 186.5 每139us中断一次 实际上是150us     
   172  00003E   64C8(1)  	B0BCLR	FT0IRQ ;                   // T0 中断请求标志清零。
   173  00003F   6CC9(1)  	B0BSET 	FT0IEN ;                   //允许响应 T0 中断。
   174  000040   6FD8(1)          B0BSET   FT0ENB;                   //启动定时器T0运行 
   175  000041             
   176  000041                     //--- TC0 PWM Config  蜂鸣器驱动 2K频率-高电平和低电平的时间宽度都为 250μs--------------------------------------
   177  000041   2D70(1)          MOV  A, #70H
   178  000042   2FDA(1)          B0MOV TC0M, A;                  // 16MHz/16=  Fcpu/2   2us  256-250/2=
   179  000043   2D9B(1)          MOV  A, #155
   180  000044   2FCD(1)          B0MOV  TC0R, A;                   //每隔125*2 =250us中断一次
   181  000045   2FDB(1)          B0MOV  TC0C, A;                   //  
   182  000046   6ADA(1)          B0BSET  FALOAD0;                  //使能 TC0 自动装载
   183  000047   61DA(1)          B0BCLR	FTC0OUT;                  //允许P5.4口作PWM输出
   184  000048   60DA(1)  	B0BCLR	FPWM0OUT;                //允许PWM/BUZZER功能  
   185  000049   6DC9(1)          B0BSET   FTC0IEN;                  //允许中断Enable TC0 Interrput
   186  00004A   6FDA(1)          B0BSET   FTC0ENB;                  // 定时器开启
   187  00004B                     //----Start Run---------------------------------------
   188  00004B   6FDF(1)          B0BSET   FGIE;                    // Enable all Interrput
   189  00004C              
   190  00004C                     
   191  00004C             
   192  00004C             Loop:
   193  00004C                    
   194  00004C   C050(2)          CALL IR_deal     ;红外处理
   195  00004D   C093(2)          CALL touch_check ;触摸检测
   196  00004E   C0C1(2)          CALL touch_deal  ;触摸处理
   197  00004F                  
   198  00004F   804C(2)          JMP Loop;
   199  000050             
   200  000050             
   201  000050             ;**************** 红外处理************************
   202  000050             IR_deal: 
   203  000050   7800(1+S)          B0BTS1     IR_Flag
   204  000051   8081(2)          JMP        IR_deal_end
   205  000052   2DE6(1)          MOV        A,#230
   206  000053   0708(1+S)          CMPRS      A,IR_count
   207  000054   807F(2)          JMP        IR_noden      ;IR_count != 230 还存在 IR_count > 230的情况
   208  000055             IR_den:
   209  000055   6000(1)          B0BCLR     IR_Flag       ;IR_count = 230 //红外数据接收完成后 230*139 = 31970us处理数据
   210  000056   2B08(1)          CLR        IR_count
   211  000057                     
   212  000057                     ;B0BTS0     sysFunFlag ;红外按键是在系统功能未开启的情况下才能使用，如果sysFunFlag=1则系统功能己开启
   213  000057                     ;JMP        IR_deal_end
   214  000057             
   215  000057   2E09(1)          B0MOV      A, IRdata
   216  000058   2A0F(1)  	AND        A, #0FH
   217  000059   2F0C(1)  	B0MOV      tempVal,A  ;低四位代表IR_LIGHT_BUTTON关键值 
   218  00005A                     
   219  00005A   6286(1)          B0BCLR     FC          ;高四位代表IR_ONOFF_BUTTON开键值
   220  00005B   0909(1)          RRCM       IRdata
   221  00005C   6286(1)          B0BCLR     FC 
   222  00005D   0909(1)          RRCM       IRdata
   223  00005E   6286(1)          B0BCLR     FC 
   224  00005F   0909(1)          RRCM       IRdata
   225  000060   6286(1)          B0BCLR     FC 
   226  000061   0909(1)          RRCM       IRdata 
   227  000062   2E09(1)          B0MOV      A, IRdata
   228  000063   070C(1+S)          CMPRS      A, tempVal
   229  000064   8067(2)  	JMP        value_noDen    ;如果两键值不相等则继续判断
   230  000065   2B09(1)          CLR        IRdata
   231  000066   8081(2)          JMP        IR_deal_end ;如果两键值相等则退出
   232  000067             value_noDen:      ;如果两键值不相等则继续判断
   233  000067   2B09(1)          CLR        IRdata
   234  000068   7286(1+S)          B0BTS0    FC
   235  000069   8070(2)          JMP        onoffDeal ;没借位，说明IR_ONOFF_BUTTON开键值 > IR_LIGHT_BUTTON关键值 
   236  00006A                                          ;借位，说明IR_ONOFF_BUTTON开键值 < IR_LIGHT_BUTTON关键值
   237  00006A                     ;灯键处理 
   238  00006A   6F00(1)          B0BSET     buzzerEnableFlag;蜂鸣器响
   239  00006B   6C00(1)  	B0BSET     sysFunFlag
   240  00006C   60D1(1)  	B0BCLR     B_BTOUCH_LED_PIN;
   241  00006D   6CD2(1)          B0BSET     R_POWER_LED_PIN;
   242  00006E   C0CD(2)          CALL       btn_inc_fun     ;调用键值加1处理函数
   243  00006F   8081(2)          JMP        IR_deal_end ; 
   244  000070              
   245  000070             onoffDeal:   ;电源开关键开处理
   246  000070   6F00(1)          B0BSET     buzzerEnableFlag;蜂鸣器响 
   247  000071   7400(1+S)          B0BTS0     sysFunFlag ;红外按键是在系统功能未开启的情况下才能使用，如果sysFunFlag=1则系统功能己开启
   248  000072   8081(2)          JMP        IR_deal_end ;
   249  000073             
   250  000073   7101(1+S)          B0BTS0     light_flag
   251  000074   807A(2)          JMP        light_off_d ;关处理
   252  000075   69D2(1)          B0BSET     LIGHT_PIN   ;开灯处理灯亮
   253  000076   6901(1)          B0BSET     light_flag
   254  000077   6CD2(1)         	B0BSET     R_POWER_LED_PIN;
   255  000078   60D1(1)          B0BCLR     B_BTOUCH_LED_PIN;
   256  000079   8081(2)          JMP        IR_deal_end ;
   257  00007A             light_off_d:
   258  00007A   61D2(1)          B0BCLR     LIGHT_PIN   ;关灯处理
   259  00007B   6101(1)          B0BCLR     light_flag
   260  00007C   64D2(1)  	B0BCLR     R_POWER_LED_PIN;
   261  00007D   68D1(1)          B0BSET     B_BTOUCH_LED_PIN;
   262  00007E   8081(2)          JMP        IR_deal_end ;
   263  00007F             	
   264  00007F             IR_noden:
   265  00007F   7A86(1+S)        B0BTS1     FC
   266  000080   8055(2)        JMP         IR_den ;发生了借位说明IR_count > 230
   267  000081                   ;JMP         IR_deal_end            
   268  000081             IR_deal_end:
   269  000081   7A01(1+S)        B0BTS1   int0_flag
   270  000082   0E00(2)        RET
   271  000083   2DF0(1)        MOV      A, #0F0H
   272  000084   0702(1+S)        CMPRS    A,IR_time 
   273  000085   8090(2)        JMP      IR_BUDEN0
   274  000086             IR_DEN0:
   275  000086                   //--- P00 Config-------------------------------------
   276  000086   2D10(1)        MOV   A, #10H
   277  000087   2FBF(1)        B0MOV PEDGE,  A;               //下降沿触发中断
   278  000088                   ;PEDGE = 0x08;               //上升沿触发中断
   279  000088   60C8(1)        B0BCLR   FP00IRQ;               //清除中断标志
   280  000089   68C9(1)        B0BSET   FP00IEN;               //P0.0 外部中断(INT0)使能
   281  00008A   6801(1)        B0BSET   edgeFlag;
   282  00008B   6201(1)        B0BCLR   int0_flag
   283  00008C   6000(1)        B0BCLR   IR_Flag   ;红外数据接收完成标志位置1
   284  00008D   2B06(1)        CLR      IR_bit    ;位数变量清零
   285  00008E   6500(1)        B0BCLR   isRec
   286  00008F   0E00(2)        RET
   287  000090             IR_BUDEN0:
   288  000090   7A86(1+S)        B0BTS1   FC
   289  000091   8086(2)        JMP      IR_DEN0
   290  000092   0E00(2)        RET
   291  000093             ;******************end***********************************
   292  000093             ;/*************触摸功能*********************/
   293  000093             
   294  000093             ;-------------触摸输出检测-------------------
   295  000093             ;无触摸时高电平，有触摸时低电平时长大于300ms
   296  000093             touch_check:
   297  000093   73D2(1+S)      B0BTS0   TOUCH_PIN 
   298  000094   80AC(2)      JMP      touch_Hight        ;当引脚高电平   
   299  000095   7100(1+S)      B0BTS0   Touch_flag       ;当引脚为低电平执行
   300  000096   80A9(2)      JMP      touch_L;当Touch_flag=0时执行
   301  000097                                 ;当Touch_flag=1时执行 //139微秒 *500 = 69.5ms
   302  000097   2D01(1)      MOV      A,#1 ; 500 =1F4H    
   303  000098   0705(1+S)      CMPRS    A,Touch_timeH
   304  000099   80A1(2)      JMP      Hsubnden
   305  00009A   2DF4(1)      MOV      A,#0f4H  ;Touch_timeH =1 处理 比较低字节 
   306  00009B   0704(1+S)      CMPRS    A,Touch_timeL
   307  00009C   809E(2)      JMP      Lsubnden    ;跳至低字节不相等，高字节相等，处理
   308  00009D   80A4(2)      JMP      daden500;低字节相等，高字节相等，处理
   309  00009E                 
   310  00009E             Lsubnden:
   311  00009E   7A86(1+S)       B0BTS1   FC 
   312  00009F   80A4(2)       JMP      daden500;c=0发生借位，Touch_timeL>#F4H且 高字节相等，
   313  0000A0   80C0(2)       JMP      touch_check_end ;c=0未发生借位，
   314  0000A1             
   315  0000A1             Hsubnden:   ;Touch_timeH !=1 处理 
   316  0000A1   7A86(1+S)      B0BTS1   FC
   317  0000A2   80A4(2)      JMP      daden500   ;进位标志置 0 借位发生，表明Touch_timeH > 1 即大于500
   318  0000A3   80C0(2)      JMP      touch_check_end ;Touch_timeH < 1
   319  0000A4             
   320  0000A4             daden500:    ; Touch_timeH  Touch_timeL >=500 执行   
   321  0000A4   2B04(1)      CLR       Touch_timeL
   322  0000A5   2B05(1)      CLR       Touch_timeH
   323  0000A6   6900(1)      B0BSET   Touch_flag
   324  0000A7   6C00(1)      B0BSET   sysFunFlag
   325  0000A8   80C0(2)      JMP      touch_check_end 
   326  0000A9             touch_L:
   327  0000A9   2B04(1)      CLR      Touch_timeL
   328  0000AA   2B05(1)      CLR      Touch_timeH
   329  0000AB   80C0(2)      JMP      touch_check_end
   330  0000AC             
   331  0000AC             
   332  0000AC             touch_Hight:    ;当引脚为高电平执行  
   333  0000AC   7900(1+S)      B0BTS1   Touch_flag        ;当引脚为低电平执行
   334  0000AD   80BE(2)      JMP      touch_flag_L;当Touch_flag=0时执行
   335  0000AE                 ;处理if(Touch_time > 2000) 
   336  0000AE                 ;2000 hex 7D0
   337  0000AE   2D07(1)      MOV      A,   #7   ; 先判断高位 Touch_timeH=7   
   338  0000AF   0705(1+S)      CMPRS    A,   Touch_timeH
   339  0000B0   80B8(2)      JMP      Hnoden 
   340  0000B1             Hden:;高字节相等继续判断低字节
   341  0000B1   2DD0(1)      MOV      A,   #0d0H 
   342  0000B2   0704(1+S)      CMPRS    A,   Touch_timeL
   343  0000B3   80BB(2)      JMP      Lnoden
   344  0000B4             Lden:;高低字节都相等  说明计数等于2000 处理等于大于2000
   345  0000B4   2B04(1)      CLR      Touch_timeL    
   346  0000B5   2B05(1)      CLR      Touch_timeH
   347  0000B6   6100(1)      B0BCLR   Touch_flag
   348  0000B7   80C0(2)      JMP      touch_check_end
   349  0000B8             
   350  0000B8             Hnoden:;高字节不相等
   351  0000B8   7286(1+S)      B0BTS0   FC    
   352  0000B9   80C0(2)      JMP      touch_check_end ;没发生借位
   353  0000BA   80B4(2)      JMP      Lden ; Touch_timeH>7 说明计数大于2000 处理大于2000
   354  0000BB             Lnoden:    ;处理高字节等于7低字节不等于D0H
   355  0000BB   7286(1+S)      B0BTS0   FC    
   356  0000BC   80C0(2)      JMP      touch_check_end ;没发生借位，说明Touch_timeL<7DH
   357  0000BD   80B4(2)      JMP      Lden ;发生借位 Touch_timeH=7,Touch_timeL>7DH 说明计数大于2000 处理大于2000
   358  0000BE             touch_flag_L:
   359  0000BE   2B04(1)      CLR       Touch_timeL
   360  0000BF   2B05(1)      CLR       Touch_timeH
   361  0000C0                ; JMP       touch_check_end
   362  0000C0             touch_check_end:
   363  0000C0   0E00(2)      RET
   364  0000C1             ;-------------------------------------------------------------
   365  0000C1             ;-----------------触摸处理------------------------------------
   366  0000C1             touch_deal:
   367  0000C1   7100(1+S)      B0BTS0     Touch_flag   ; 判断触摸标志==1
   368  0000C2   80C5(2)      JMP        deal_den1    ;Touch_flag==1处理
   369  0000C3   6200(1)      B0BCLR     touch_preFlag ;Touch_flag==0处理
   370  0000C4   80CC(2)      JMP        touch_deal_end
   371  0000C5             
   372  0000C5             deal_den1:
   373  0000C5   7200(1+S)      B0BTS0     touch_preFlag   ; 判断上次触摸标志touch_preFlag==0？
   374  0000C6   80CC(2)      JMP        touch_deal_end  ; touch_preFlag=1 处理
   375  0000C7   6A00(1)      B0BSET     touch_preFlag   ;touch_preFlag=0 处理 
   376  0000C8   6F00(1)      B0BSET     buzzerEnableFlag;蜂鸣器响
   377  0000C9   60D1(1)      B0BCLR     B_BTOUCH_LED_PIN;
   378  0000CA   6CD2(1)      B0BSET     R_POWER_LED_PIN;
   379  0000CB   C0CD(2)      CALL       btn_inc_fun     ;调用键值加1处理函数
   380  0000CC             touch_deal_end:
   381  0000CC                
   382  0000CC   0E00(2)      RET 
   383  0000CD             
   384  0000CD             btn_inc_fun:   ;键值加1处理函数 判断键值是否超过最大值BUTTON_VALUE_MAX
   385  0000CD   1607(1+S)      INCMS      btn_value
   386  0000CE   0000(1)      NOP
   387  0000CF   2D07(1)      MOV        A, #BUTTON_VALUE_MAX
   388  0000D0   0707(1+S)      CMPRS      A, btn_value
   389  0000D1   80D6(2)      JMP        deal_noden2   ;btn_value不等BUTTON_VALUE_MAX
   390  0000D2             deal_den2:                   ;btn_value相等BUTTON_VALUE_MAX
   391  0000D2   2D01(1)      MOV        A,  #1  
   392  0000D3   2F07(1)      B0MOV      btn_value,A
   393  0000D4   C0DA(2)      CALL       delay_action_fun
   394  0000D5   80D9(2)      JMP        btn_end
   395  0000D6             deal_noden2:    ;btn_value不等BUTTON_VALUE_MAX            
   396  0000D6   7A86(1+S)      B0BTS1     FC
   397  0000D7   80D2(2)      JMP        deal_den2 ;发生借位说明btn_value>BUTTON_VALUE_MAX
   398  0000D8   C0DA(2)      CALL       delay_action_fun
   399  0000D9                 ;JMP        btn_end     
   400  0000D9             btn_end:
   401  0000D9              
   402  0000D9   0E00(2)      RET 	
   403  0000DA             ;-------------------------------------------------------------
   404  0000DA             ;***************************END********************************
   405  0000DA             
   406  0000DA             ;8888888888*继电器动作函数*8888888888888888888
   407  0000DA             delay_action_fun: 
   408  0000DA   2D00(1)      MOV      A,#0
   409  0000DB   0707(1+S)      CMPRS    A, btn_value
   410  0000DC   80E0(2)      JMP      cmpare1
   411  0000DD   63D1(1)      B0BCLR   DELAY1_PIN  ;btn_value=0 处理
   412  0000DE   62D1(1)      B0BCLR   DELAY2_PIN  ; 断开所有继电器
   413  0000DF   8106(2)      JMP      delay_fun_end
   414  0000E0             cmpare1:
   415  0000E0   2D01(1)      MOV      A, #1
   416  0000E1   0707(1+S)      CMPRS    A, btn_value 
   417  0000E2   80E6(2)      JMP      cmpare2
   418  0000E3   6BD1(1)      B0BSET   DELAY1_PIN;btn_value=1 处理
   419  0000E4   62D1(1)      B0BCLR   DELAY2_PIN  ;继电器2断开继电器1吸合
   420  0000E5   8106(2)      JMP      delay_fun_end
   421  0000E6             cmpare2:
   422  0000E6   2D02(1)      MOV      A, #2
   423  0000E7   0707(1+S)      CMPRS    A, btn_value 
   424  0000E8   80EC(2)      JMP      cmpare3
   425  0000E9   63D1(1)      B0BCLR   DELAY1_PIN ;btn_value=2 处理
   426  0000EA   6AD1(1)      B0BSET   DELAY2_PIN ;继电器1断开继电器2吸合
   427  0000EB   8106(2)      JMP      delay_fun_end
   428  0000EC             cmpare3:
   429  0000EC   2D03(1)      MOV      A, #3
   430  0000ED   0707(1+S)      CMPRS    A, btn_value 
   431  0000EE   80F2(2)      JMP      cmpare4
   432  0000EF   6BD1(1)      B0BSET   DELAY1_PIN ;btn_value=3 处理
   433  0000F0   6AD1(1)      B0BSET   DELAY2_PIN ;吸合所有继电器
   434  0000F1   8106(2)      JMP      delay_fun_end
   435  0000F2             cmpare4:
   436  0000F2   2D04(1)      MOV      A, #4
   437  0000F3   0707(1+S)      CMPRS    A, btn_value 
   438  0000F4   80F7(2)      JMP      cmpare5
   439  0000F5   69D2(1)      B0BSET   LIGHT_PIN;btn_value=4 处理 灯点亮           
   440  0000F6   8106(2)      JMP      delay_fun_end
   441  0000F7             cmpare5:
   442  0000F7   2D05(1)      MOV      A, #5
   443  0000F8   0707(1+S)      CMPRS    A, btn_value 
   444  0000F9   80FE(2)      JMP      cmpare6
   445  0000FA   69D2(1)      B0BSET   LIGHT_PIN ;btn_value=5 处理灯亮
   446  0000FB   63D1(1)      B0BCLR   DELAY1_PIN ;
   447  0000FC   62D1(1)      B0BCLR   DELAY2_PIN; 断开所有继电器
   448  0000FD   8106(2)      JMP      delay_fun_end
   449  0000FE             cmpare6:
   450  0000FE   2D06(1)      MOV      A, #6
   451  0000FF   0707(1+S)      CMPRS    A, btn_value 
   452  000100   8106(2)      JMP      delay_fun_end
   453  000101   61D2(1)      B0BCLR   LIGHT_PIN ;btn_value=6 处理 处理灯灭
   454  000102   6400(1)      B0BCLR   sysFunFlag  
   455  000103   6101(1)      B0BCLR   light_flag    
   456  000104   64D2(1)      B0BCLR   R_POWER_LED_PIN;
   457  000105   68D1(1)      B0BSET   B_BTOUCH_LED_PIN;
   458  000106                 ;DELAY1_PIN = DELAY_OFF ;
   459  000106                 ;DELAY2_PIN = DELAY_OFF ; 断开所有继电器
   460  000106                ; JMP      delay_fun_end
   461  000106              
   462  000106             delay_fun_end:
   463  000106   0E00(2)       RET
   464  000107             ;8888888888888888*end*888888888888888888888
   465  000107             
   466  000107             
   467  000107             IntService:
   468  000107   0400(1)        PUSH
   469  000108             ;********************** INT0 中断服务程序************************** 
   470  000108                    //P00 interrput//P0.0 外部中断(INT0)
   471  000108   78C8(1+S)        B0BTS1 FP00IRQ ; 检测 P00IRQ。 ; INT0 中断服务程序
   472  000109   8145(2)        JMP    T0_int ; P00IRQ = 0。
   473  00010A   60C8(1)        B0BCLR FP00IRQ ; P00IRQ 清零。
   474  00010B   6A01(1)        B0BSET   int0_flag
   475  00010C             	  
   476  00010C   7801(1+S)        B0BTS1   edgeFlag  ;
   477  00010D   811E(2)        JMP      Rising_edge;跳至上升沿中断处理 
   478  00010E                
   479  00010E               ;Falling edge    //下降沿中断  
   480  00010E   2D08(1)        MOV      A, #8   ; //触发方式为上沿触发
   481  00010F   2FBF(1)        B0MOV    PEDGE,A
   482  000110   6001(1)        B0BCLR   edgeFlag  
   483  000111   2D37(1)        MOV      A, #55     ;//判断引导码(9ms+1.12ms)（0.56ms+1.12ms）
   484  000112   0702(1+S)        CMPRS    A,IR_time
   485  000113   811A(2)        JMP      timeBuDen  ;跳至IR_time!=55处理
   486  000114             rising_result:             ; IR_time=55处理
   487  000114   2B03(1)        CLR      IR_data
   488  000115   6D00(1)        B0BSET   isRec
   489  000116   2D01(1)        MOV      A,#1
   490  000117   2F06(1)        B0MOV    IR_bit,A  ; //位数变量自增
   491  000118   2B02(1)        CLR      IR_time   ;//清零时间宽度计数值
   492  000119   8142(2)        JMP      Exit_int0      
   493  00011A             timeBuDen:  
   494  00011A   7A86(1+S)        B0BTS1   FC
   495  00011B   8114(2)        JMP      rising_result
   496  00011C   2B02(1)        CLR      IR_time   ;//清零时间宽度计数值
   497  00011D   8142(2)        JMP      Exit_int0  ;没借位说明IR_time<55 
   498  00011E             	  
   499  00011E             Rising_edge:;上升沿中断
   500  00011E   2D10(1)        MOV      A,   #010H
   501  00011F   2FBF(1)        B0MOV    PEDGE,A
   502  000120   6801(1)        B0BSET   edgeFlag	 ;配置触发方式为下降沿触发;
   503  000121                   		         ;开始记录时间长 1-0码 	
   504  000121   7D00(1+S)        B0BTS1   isRec     
   505  000122   8129(2)        JMP      preExit_int 
   506  000123                  
   507  000123   2D05(1)        MOV      A, #5
   508  000124   0702(1+S)        CMPRS    A, IR_time
   509  000125   812B(2)        JMP      noDen5
   510  000126             timeDen5:                ;IR_time>=5,若“时间间隔”比5大那肯定是“1码”反之为“0码”
   511  000126   2D80(1)        MOV      A, #80H  
   512  000127   1903(1)        OR       IR_data, A ;//通过按位或运算高位填1    		
   513  000128   812D(2)        JMP      dataOK
   514  000129             preExit_int:
   515  000129   2B02(1)        CLR      IR_time
   516  00012A   8142(2)  	  JMP      Exit_int0
   517  00012B             noDen5:
   518  00012B   7A86(1+S)        B0BTS1   FC			    		
   519  00012C   8126(2)        JMP      timeDen5  ;产生借位说明IR_time>5			                   
   520  00012D             dataOK:	 
   521  00012D   2B02(1)        CLR      IR_time	 ;清零时间宽度计数值        //若数据没有拼合完8次
   522  00012E   1606(1+S)        INCMS    IR_bit 	 ;位数变量自增	
   523  00012F   2D09(1)        MOV      A, #9	 ;如果达到了9位（引导码+8个数据位）
   524  000130   0706(1+S)        CMPRS    A, IR_bit
   525  000131   8140(2)        JMP      bitBuden9
   526  000132                                      ;IR_bit达到了9位（引导码+8个数据位）处理
   527  000132   6800(1)        B0BSET   IR_Flag   ;红外数据接收完成标志位置1
   528  000133   2B06(1)        CLR      IR_bit    ;位数变量清零
   529  000134   6500(1)        B0BCLR   isRec
   530  000135   2DBB(1)        MOV      A, #IR_LIGHT_BUTTON      
   531  000136   0703(1+S)        CMPRS    A, IR_data     
   532  000137   813A(2)        JMP      IRd_buDenLight
   533  000138   1609(1+S)        INCMS    IRdata
   534  000139   8142(2)        JMP      Exit_int0
   535  00013A             IRd_buDenLight:
   536  00013A   2D1B(1)        MOV      A, #IR_ONOFF_BUTTON
   537  00013B   0703(1+S)        CMPRS    A, IR_data 
   538  00013C   8142(2)        JMP      Exit_int0
   539  00013D   2D10(1)        MOV      A, #0x10
   540  00013E   1309(1)        ADD      IRdata,A
   541  00013F   8142(2)        JMP      Exit_int0
   542  000140             bitBuden9:			 
   543  000140   6286(1)         B0BCLR  FC    ;通过右移运算“腾出”位置准备下一位判定
   544  000141   0903(1)         RRCM    IR_data 
   545  000142                    ;JMP      Exit_int0 							
   546  000142             Exit_int0:
   547  000142   2B08(1)         CLR       IR_count ;//有接收数据则清零延时计数器  
   548  000143   68C9(1)         B0BSET    FP00IEN  ;//P0.0 外部中断(INT0)使能
   549  000144   817E(2)         JMP   Exit_int
   550  000145             
   551  000145             ;******************** T0 中断程序********************************
   552  000145             T0_int:  ; T0 中断程序。//定时器T0中断 139us中断一次
   553  000145   7CC8(1+S)  	B0BTS1   FT0IRQ    ; 检查是否有 T0 中断请求标志。
   554  000146   8157(2)  	JMP      TC0_int   ;
   555  000147   64C8(1)  	B0BCLR   FT0IRQ    ;清 T0IRQ。 ;// T0 中断请求标志清零。
   556  000148   2DBA(1)  	MOV      A, #186   ;256-139/2 = 256- 69.5 = 186.5 每139us中断一次
   557  000149   2FD9(1)  	B0MOV    T0C, A
   558  00014A   2DF0(1)          MOV      A, #0F0H
   559  00014B   0702(1+S)          CMPRS    A,IR_time 
   560  00014C   1602(1+S)          INCMS    IR_time
   561  00014D   1604(1+S)          INCMS    Touch_timeL
   562  00014E   8150(2)          JMP      timeLno0
   563  00014F   1605(1+S)          INCMS    Touch_timeH  
   564  000150             timeLno0:      
   565  000150   7000(1+S)          B0BTS0   IR_Flag        
   566  000151   1608(1+S)          INCMS    IR_count   ;//接收到红外数据,计数器加1
   567  000152   2D70(1)          MOV      A, #70H
   568  000153   2FD8(1)          B0MOV    T0M, A     ;16M/16/2= 2uS   Fcpu的2分频
   569  000154                 
   570  000154   6CC9(1)          B0BSET   FT0IEN     ; //允许响应 T0 中断。
   571  000155   6FD8(1)          B0BSET   FT0ENB     ; //启动定时器T0运行 
   572  000156   817E(2)          JMP   Exit_int
   573  000157             
   574  000157             ;*************TC0中断子程序***********************************
   575  000157             TC0_int:  ; TC0 中断程序。 250uS
   576  000157   7DC8(1+S)          B0BTS1 FTC0IRQ   ; 检查是否有 TC0 中断请求标志。 
   577  000158   817E(2)  	JMP EXIT_INT     ; TC0IRQ = 0，退出中断。
   578  000159   65C8(1)  	B0BCLR FTC0IRQ   ; 清 TC0IRQ。
   579  00015A   2D70(1)          MOV  A, #70H
   580  00015B   2FDA(1)          B0MOV TC0M, A;                  // 16MHz/16=  Fcpu/2   2us  256-250/2= 
   581  00015C   2D9B(1)          MOV  A, #155
   582  00015D   2FCD(1)          B0MOV  TC0R, A;                   //每隔125*2 =250us中断一次
   583  00015E   2FDB(1)          B0MOV  TC0C, A;                  
   584  00015F   6ADA(1)          B0BSET  FALOAD0;                  //使能 TC0 自动装载
   585  000160   61DA(1)          B0BCLR	FTC0OUT;                  //允许P5.4口作PWM输出
   586  000161   60DA(1)  	B0BCLR	FPWM0OUT;                //允许PWM/BUZZER功能  
   587  000162                
   588  000162   7F00(1+S)          B0BTS1    buzzerEnableFlag
   589  000163   817A(2)          JMP       BUZZER_OFF_DEAL
   590  000164                         
   591  000164   160A(1+S)          INCMS     buzzerCntL
   592  000165   8167(2)          JMP       banDaYu3000
   593  000166   160B(1+S)          INCMS     buzzerCntH
   594  000167             banDaYu3000:   ;1000 = 0x3E8
   595  000167   2D03(1)          MOV       A, #03H
   596  000168   070B(1+S)          CMPRS     A, buzzerCntH
   597  000169   8172(2)          JMP       BUZZER_BUDEN   ;跳转到buzzerCnt < 1000
   598  00016A   2DE8(1)          MOV       A, #0E8H       ;高字节相等再判断低字节
   599  00016B   070A(1+S)          CMPRS     A, buzzerCntL      
   600  00016C   8172(2)          JMP       BUZZER_BUDEN   ;高字节相等低字节不相等
   601  00016D   6700(1)          B0BCLR    buzzerEnableFlag
   602  00016E   2B0A(1)          CLR       buzzerCntL
   603  00016F   2B0B(1)          CLR       buzzerCntH
   604  000170   64D5(1)          B0BCLR    BUZZER_PIN
   605  000171   817C(2)          JMP       TC0_int_end
   606  000172             
   607  000172             BUZZER_BUDEN:
   608  000172   7E00(1+S)          B0BTS1    buzzerFlag
   609  000173   8177(2)  	JMP       buzzerIs0
   610  000174   6600(1)          B0BCLR    buzzerFlag
   611  000175   64D5(1)          B0BCLR    BUZZER_PIN
   612  000176   817C(2)          JMP       TC0_int_end
   613  000177             buzzerIs0:
   614  000177   6E00(1)          B0BSET    buzzerFlag
   615  000178   6CD5(1)  	B0BSET	  BUZZER_PIN     
   616  000179   817C(2)          JMP       TC0_int_end
   617  00017A             
   618  00017A             BUZZER_OFF_DEAL:
   619  00017A   64D5(1)          B0BCLR    BUZZER_PIN
   620  00017B   817C(2)          JMP       TC0_int_end
   621  00017C             TC0_int_end:
   622  00017C   6DC9(1)          B0BSET   FTC0IEN;                  ;//允许中断Enable TC0 Interrput
   623  00017D   6FDA(1)          B0BSET   FTC0ENB;                 ; // 定时器开启
   624  00017E                     ;JMP   Exit_int	
   625  00017E             Exit_int: ;退出中断
   626  00017E             
   627  00017E   0500(1)        POP
   628  00017F   0F00(2)        RETI
   629  000180                   ENDP
   630  000180             
